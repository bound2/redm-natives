// Named functions
export declare function ActivateInteriorEntitySet(interior: number, p2: number): string;
export declare function ClearRoomForEntity(entity: number): void;
export declare function ClearRoomForGameViewport(): void;
export declare function DeactivateInteriorEntitySet(interior: number, p2: boolean): string;
export declare function DisableInterior(interior: number, toggle: boolean): void;
export declare function ForceRoomForEntity(entity: number, interior: number, roomHashKey: string | number): void;
export declare function ForceRoomForGameViewport(interiorID: number, roomHashKey: string | number): void;
export declare function GetInteriorAtCoords(x: number, y: number, z: number): number;
export declare function GetInteriorAtCoordsWithType(x: number, y: number, z: number): [number, string];
export declare function GetInteriorAtCoordsWithTypehash(x: number, y: number, z: number, typeHash: string | number): number;
export declare function GetInteriorFromCollision(x: number, y: number, z: number): number;
export declare function GetInteriorFromEntity(entity: number): number;
export declare function GetInteriorFromGameViewport(): number;
export declare function GetInteriorInfo(interior: number): [[number, number, number], string | number];
export declare function GetInteriorMinimapHash(interior: number): string | number;
export declare function GetInteriorPosition(interior: number): [number, number, number];
export declare function GetKeyForEntityInRoom(entity: number): string | number;
export declare function GetRoomKeyFromEntity(entity: number): string | number;
export declare function IsCollisionMarkedOutside(x: number, y: number, z: number): boolean;
export declare function IsInteriorEntitySetActive(interior: number): [boolean, string];
export declare function IsInteriorEntitySetValid(interior: number): [boolean, string];
export declare function IsInteriorReady(interior: number): boolean;
export declare function IsInteriorScene(): boolean;
export declare function IsValidInterior(interior: number): boolean;
export declare function PinInteriorInMemory(interior: number): void;
export declare function UnpinInterior(interior: number): void;
// Hash functions
export declare function N_0x2533f2ab0eb9c6f9(p0: any, p1: any): void;
export declare function N_0x5bd616735f16bf5c(entity: number, interior: number): void;
export declare function N_0xb5ef6fef2dc9ebed(interior: number): any;
export declare function N_0xfe2b3d5500b1b2e4(p0: any, p1: any): void;
