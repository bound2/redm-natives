// Named functions
export declare function Absf(value: number): number;
export declare function Absi(value: number): number;
export declare function Acos(p0: number): number;
export declare function AddDispatchSpawnBlockingArea(volume: number): any;
export declare function AddPopMultiplierArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: number, p7: number, p8: boolean, p9: boolean): number;
export declare function AddTacticalAnalysisPoint(p0: any, p1: any, p2: any, p3: any): void;
export declare function AreStringsEqual(): [boolean, string, string];
export declare function Asin(p0: number): number;
export declare function Atan(p0: number): number;
export declare function Atan2(p0: number, p1: number): number;
export declare function BlockDispatchServiceResourceCreation(dispatchService: number, toggle: boolean): void;
export declare function CancelOnscreenKeyboard(): void;
export declare function ClearAngledAreaOfVehicles(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function ClearArea(x: number, y: number, z: number, radius: number, p4: any): void;
export declare function ClearBit(offset: number): number;
export declare function ClearOverrideWeather(): void;
export declare function ClearTacticalAnalysisPoints(): void;
export declare function ClearWeatherTypePersist(): void;
export declare function ClearWeatherTypePersistOvertime(milliseconds: number): void;
export declare function CompareStrings(matchCase: boolean, maxLength: number): [number, string, string];
export declare function CopyMemory(size: number): [any, any];
export declare function CreateColorString(rgb: number): string;
export declare function CreateIncident(dispatchService: number, x: number, y: number, z: number, numUnits: number, radius: number, p7: any, p8: any): [boolean, number];
export declare function CreateIncidentWithEntities(dispatchService: number, x: number, y: number, z: number, itemSet: number, radius: number): [boolean, number];
export declare function DeleteIncident(incidentId: number): void;
export declare function DisplayOnscreenKeyboard(p0: number, maxInputLength: number): [string, string, string, string, string, string];
export declare function DoesItemHaveValidBase(item: number): boolean;
export declare function DoesPopMultiplierAreaExist(id: number): boolean;
export declare function DoesStringExistInString(): [boolean, string, string];
export declare function EnableDispatchService(dispatchService: number, toggle: boolean): void;
export declare function FireSingleBullet(): any;
export declare function ForceLightningFlash(): void;
export declare function ForceLightningFlashAtCoords(x: number, y: number, z: number, p3: number): void;
export declare function GameFrameworkManagerGetMode(): string | number;
export declare function GameFrameworkManagerInit(transitionMode: string | number): boolean;
export declare function GameFrameworkManagerShutdown(): void;
export declare function GetAngleBetween2dVectors(x1: number, y1: number, x2: number, y2: number): number;
export declare function GetBenchmarkIterationsFromCommandLine(): number;
export declare function GetBenchmarkPassFromCommandLine(): number;
export declare function GetBenchmarkTime(): number;
export declare function GetBitsInRange(aVar: number, rangeStart: number, rangeEnd: number): number;
export declare function GetCoordsOfProjectileTypeWithinDistance(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): [number, number, number];
export declare function GetDistanceBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, useZ: boolean): number;
export declare function GetEntityFromItem(item: number): number;
export declare function GetFrameCount(): number;
export declare function GetFrameTime(): number;
export declare function GetGameTimer(): number;
export declare function GetGameTimerNonScaledClipped(): number;
export declare function GetGroundZAndNormalFor3dCoord(x: number, y: number, z: number): [boolean, number, [number, number, number]];
export declare function GetGroundZFor3dCoord(x: number, y: number, z: number, p4: boolean): [boolean, number];
export declare function GetHashKey(): [string | number, string];
export declare function GetHeadingFromVector2d(dx: number, dy: number): number;
export declare function GetItemType(handle: number): number;
export declare function GetLootingEventHasFired(ped: number): [boolean, string];
export declare function GetMissionFlag(): boolean;
export declare function GetModelDimensions(modelHash: string | number): [[number, number, number], [number, number, number]];
export declare function GetNextWeatherTypeHashName(): string | number;
export declare function GetNumberOfFreeStacksOfThisSize(stackSize: number): number;
export declare function GetNumberOfMicrosecondsSinceLastCall(): number;
export declare function GetObjectFromIndexedItem(item: number): Record<string, any>;
export declare function GetOnscreenKeyboardResult(): string;
export declare function GetPedFromIndexedItem(item: number): number;
export declare function GetPrevWeatherTypeHashName(): string | number;
export declare function GetProjectileNearPed(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): boolean;
export declare function GetRainLevel(): number;
export declare function GetRandomEventFlag(): boolean;
export declare function GetRandomFloatInRange(startRange: number, endRange: number): number;
export declare function GetRandomIntInRange(startRange: number, endRange: number): number;
export declare function GetRandomWeatherType(): string | number;
export declare function GetScriptTimeWithinFrameInMicroseconds(): number;
export declare function GetSnowLevel(): number;
export declare function GetStatusOfSavegameOperation(p0: number): number;
export declare function GetStringFromBool(value: boolean): string;
export declare function GetStringFromFloat(value: number, digits: number): string;
export declare function GetStringFromVector(x: number, y: number, z: number): string;
export declare function GetSystemTime(): number;
export declare function GetTemperatureAtCoords(x: number, y: number, z: number): number;
export declare function GetVehicleFromIndexedItem(item: number): number;
export declare function GetWeatherTypeTransition(): [string | number, string | number, number];
export declare function GetWindDirection(): [number, number, number];
export declare function GetWindSpeed(): number;
export declare function HasBulletImpactedInArea(x: number, y: number, z: number, p3: number, p4: boolean, p5: boolean): boolean;
export declare function HasBulletImpactedInBox(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: boolean): boolean;
export declare function IgnoreNextRestart(toggle: boolean): void;
export declare function IntToString(value: number, buffer: string): string;
export declare function IsBaseACoverPoint(handle: number): boolean;
export declare function IsBaseAPersistentCharacter(handle: number): boolean;
export declare function IsBitSet(address: number, offset: number): boolean;
export declare function IsBulletInAngledArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: boolean): boolean;
export declare function IsBulletInArea(p0: number, p1: number, p2: number, p3: number, p4: boolean): boolean;
export declare function IsBulletInBox(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean): boolean;
export declare function IsDurangoVersion(): boolean;
export declare function IsGameSessionStateMachineIdle(): boolean;
export declare function IsGlobalBlockValid(index: number): boolean;
export declare function IsIncidentValid(incidentId: number): boolean;
export declare function IsMagDemo1Active(): boolean;
export declare function IsMinigameInProgress(): boolean;
export declare function IsMissionCreatorActive(): boolean;
export declare function IsOrbisVersion(): boolean;
export declare function IsPcVersion(): boolean;
export declare function IsPedDecomposed(ped: number): boolean;
export declare function IsPositionOccupied(x: number, y: number, z: number, range: number, p4: boolean, p5: boolean, p6: boolean, p7: boolean, p8: boolean, p9: any, p10: boolean): boolean;
export declare function IsProjectileInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
export declare function IsProjectileTypeInAngledArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: any, p8: boolean): boolean;
export declare function IsProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, type: number, p7: boolean): boolean;
export declare function IsProjectileTypeWithinDistance(p0: number, p1: number, p2: number, p3: any, p4: number, p5: boolean): boolean;
export declare function IsStadiaVersion(): boolean;
export declare function IsStringNull(): [boolean, string];
export declare function IsStringNullOrEmpty(): [boolean, string];
export declare function IsStringNullOrEmptyOrSpaces(): [boolean, string];
export declare function NetworkSetScriptIsSafeForNetworkGame(): void;
export declare function NextOnscreenKeyboardResultWillDisplayUsingTheseFonts(p0: number): void;
export declare function OverrideSaveHouse(p0: boolean, p1: number, p2: number, p3: number, p4: number, p5: boolean, p6: number, p7: number): boolean;
export declare function PauseDeathArrestRestart(toggle: boolean): void;
export declare function PopulateNow(): void;
export declare function QueueSavegameOperation(p0: number): boolean;
export declare function ReadIntAsFloat(value: number): number;
export declare function RegisterInteractionLockonPrompt(entity: number, p2: number, p3: number, p4: number, p5: number, p6: number, prompt: number, p8: boolean, p9: number): [boolean, string];
export declare function RemoveDispatchSpawnBlockingArea(p0: any): void;
export declare function RemovePopMultiplierArea(id: number, p1: boolean): void;
export declare function RemoveStealthKill(hash: string | number, p1: boolean): void;
export declare function ResetBenchmarkRecording(): void;
export declare function ResetDispatchIdealSpawnDistance(): void;
export declare function ResetDispatchMaxSpawnDistance(): void;
export declare function ResetDispatchMinSpawnDistance(): void;
export declare function ResetScriptTimeWithinFrame(): void;
export declare function ResetWeatherVariation(p1: boolean): string;
export declare function SaveBenchmarkRecording(): void;
export declare function ScriptRaceGetPlayerSplitTime(p0: any): [boolean, any, any];
export declare function ScriptRaceInit(p0: any, p1: any, p2: any, p3: any): void;
export declare function ScriptRaceShutdown(): void;
export declare function SetBit(offset: number): number;
export declare function SetBitsInRange(rangeStart: number, rangeEnd: number, p3: number): number;
export declare function SetCheatActive(cheatId: number): void;
export declare function SetCreditsActive(toggle: boolean): void;
export declare function SetDispatchIdealSpawnDistance(p0: number): void;
export declare function SetDispatchMaxSpawnDistance(maxSpawnDistance: number): void;
export declare function SetDispatchMinSpawnDistance(minSpawnDistance: number): void;
export declare function SetFadeInAfterDeathArrest(toggle: boolean): void;
export declare function SetFadeInAfterLoad(toggle: boolean): void;
export declare function SetGameLogicPaused(): void;
export declare function SetGamePaused(toggle: boolean): void;
export declare function SetIncidentUnk(incidentId: number): void;
export declare function SetMissionFlag(toggle: boolean): void;
export declare function SetOverrideWeather(weatherType: string | number): void;
export declare function SetPedDecomposed(ped: number, toggle: boolean): void;
export declare function SetRainLevel(intensity: number): void;
export declare function SetRandomEventFlag(toggle: boolean): void;
export declare function SetRandomSeed(seed: number): void;
export declare function SetRandomWeatherType(p0: boolean, p1: boolean): void;
export declare function SetSnowLevel(level: number): void;
export declare function SetSuperJumpThisFrame(player: number): void;
export declare function SetThisScriptCanBePaused(toggle: boolean): void;
export declare function SetThisScriptCanRemoveBlipsCreatedByAnyScript(toggle: boolean): void;
export declare function SetTimeScale(timeScale: number): void;
export declare function SetWeatherType(weatherType: string | number, p1: boolean, p2: boolean, p3: boolean, p4: number, p5: boolean): void;
export declare function SetWeatherType2(weatherType: string | number, p1: number, p2: number, p3: number, p4: boolean): void;
export declare function SetWeatherTypeFrozen(toggle: boolean): void;
export declare function SetWeatherTypeTransition(p0: any, p1: any, p2: any, p3: any): void;
export declare function SetWeatherVariation(): [string, string];
export declare function SetWindDirection(direction: number): void;
export declare function SetWindSpeed(speed: number): void;
export declare function ShootSingleBulletBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: boolean, weaponHash: string | number, ownerPed: number, isAudible: boolean, isInvisible: boolean, speed: number, p13: boolean): void;
export declare function ShouldUse24HourClock(): boolean;
export declare function ShouldUseMetricMeasurements(): boolean;
export declare function ShouldUseMetricMeasurements2(): boolean;
export declare function ShouldUseMetricTemperature(): boolean;
export declare function ShouldUseMetricWeight(): boolean;
export declare function StartBenchmarkRecording(): void;
export declare function StopBenchmarkRecording(): void;
export declare function StopCurrentLoadingProgressTimer(): void;
export declare function StringToInt(): [boolean, string, number];
export declare function Tan(p0: number): number;
export declare function UiIsSingleplayerPauseMenuActive(): boolean;
export declare function UpdateOnscreenKeyboard(): number;
export declare function VarString(flags: number, ...args: any[]): string;
export declare function WaterOverrideSetOceanwavemaxamplitude(maxAmplitude: number): void;
export declare function WaterOverrideSetShorewaveamplitude(amplitude: number): void;
// Hash functions
export declare function N_0x0358b8a41916c613(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0x0730e518486deec3(p0: any): void;
export declare function N_0x082c043c7afc3747(p0: any, p1: any): void;
export declare function N_0x0a487cc74a517fb5(p0: any): void;
export declare function N_0x0d0ae5081f88cfe1(p0: any): any;
export declare function N_0x1096603b519c905f(p0: any): void;
export declare function N_0x154340e87d8cc178(p0: any): void;
export declare function N_0x1694a053dfb61a34(): string;
export declare function N_0x183672fe838a661b(p0: any): void;
export declare function N_0x243cede8f916b994(): void;
export declare function N_0x2916b30dc6c41179(p0: any): void;
export declare function N_0x2e036f0480b8bf02(): any;
export declare function N_0x2fcd528a397e5c88(p0: any, p1: any): void;
export declare function N_0x3233c4ec0514c7ec(p0: any, p1: any, p2: any, p3: any, p4: any): any;
export declare function N_0x33982467b1e349ef(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): any;
export declare function N_0x35165c658077cd0b(): any;
export declare function N_0x36040772df5e59a0(): any;
export declare function N_0x38c0c9cae1544500(p0: any): void;
export declare function N_0x38c2bf94d15f464d(p0: any): any;
export declare function N_0x39d6dace323a20b6(p0: any): any;
export declare function N_0x3a87fda8f1b6cdfb(p0: any, p1: any, p2: any): void;
export declare function N_0x3c3c7b1b5ec08764(): void;
export declare function N_0x40d72189f46d2e15(p0: any, p1: any): void;
export declare function N_0x4647842fe8f31c1e(p0: any, p1: any): void;
export declare function N_0x48e4d50f87a96aa5(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function N_0x49c44fe78a135a1d(p0: any): void;
export declare function N_0x49f3241c28ebbfbc(p0: any): void;
export declare function N_0x4b0501a468b749f8(): void;
export declare function N_0x4b101dbcc9482f2d(p0: any): any;
export declare function N_0x4d5c9cc7e7e23e09(): void;
export declare function N_0x553d67295ddd2309(p0: any): void;
export declare function N_0x5801be2df2af07ec(p0: any): void;
export declare function N_0x5b4a8121a47d844d(p0: any): any;
export declare function N_0x627b68d9ce6ee8de(p0: any): any;
export declare function N_0x68319452c5064aba(p0: any, p1: any): void;
export declare function N_0x6ac4af46a6b8dfb2(p0: any): void;
export declare function N_0x6bcf7b5cd338281a(p0: any, p1: any, p2: any): void;
export declare function N_0x6bed40493a1afdb8(p0: any, p1: any): void;
export declare function N_0x6c7b68d3ce60e8de(p0: any): any;
export declare function N_0x6f02b5e50511721e(p0: any): any;
export declare function N_0x708df841b8f27aa2(): string;
export declare function N_0x72904d3d62af5839(): any;
export declare function N_0x745808bb01cec6b9(p0: number): void;
export declare function N_0x74aca66484cebaf0(p0: any): void;
export declare function N_0x7a76104cc2cc69e8(p0: any, p1: any, p2: any): any;
export declare function N_0x7cf96f1250ef3221(p0: any): any;
export declare function N_0x7f4ce164d9a11dfe(): any;
export declare function N_0x7fa58ced69405f9a(p0: any, p1: any): void;
export declare function N_0x80e9c316ef84dd81(p0: any): any;
export declare function N_0x8314fc2013ece2da(p0: any, p1: any, p2: any): any;
export declare function N_0x83acc65d9acec5ef(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: boolean): [number, number, number];
export declare function N_0x88bc5f4aef77fc4e(p0: any, p1: any): void;
export declare function N_0x8bb99b85444544d9(p0: any, p1: any): any;
export declare function N_0x8c0f6a3d7236deeb(p0: any, p1: any): void;
export declare function N_0x8db104ccebcd58c5(p0: any, p1: any): any;
export declare function N_0x8f4f050054005c27(p0: any, p1: any): any;
export declare function N_0x91d657230bc208d2(): [string, string];
export declare function N_0x94e8ca3dee952789(p0: any, p1: any): any;
export declare function N_0x94fcadcf9f0c368e(p0: any): void;
export declare function N_0x96282005c5c6801f(p0: any, p1: any): void;
export declare function N_0x970339efa4fde518(p0: any, p1: any, p2: any): any;
export declare function N_0x9935f76407c32539(): string;
export declare function N_0x9a252aa23d7098f2(): void;
export declare function N_0x9b47971234169990(p0: any, p1: any): void;
export declare function N_0x9bf2c0c568c61641(p0: any): void;
export declare function N_0xa08111b053d84b4d(p0: any): void;
export declare function N_0xa3a8926951471c82(): void;
export declare function N_0xa9342743b634a462(p0: any): void;
export declare function N_0xab26deee120fd3fd(p0: any, p1: any): void;
export declare function N_0xab6a04cec428258b(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number): [boolean, number];
export declare function N_0xad44856a1cd29635(p0: any, p1: any, p2: any): void;
export declare function N_0xaf3a84c7de6a1dc5(p0: any, p1: any): void;
export declare function N_0xaf530e56505d1bd6(p0: any): any;
export declare function N_0xb08c4fa25bc29db9(p0: any): void;
export declare function N_0xb16fc7b364d86585(): void;
export declare function N_0xb1f6665aa54dcd5c(p0: any): any;
export declare function N_0xb711eb4bc8d06013(): void;
export declare function N_0xb909149f2bb5f6da(p0: any, p1: any): void;
export declare function N_0xba62b4d80fa66bd6(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0xbb282cf5d2333fb8(p0: any, p1: any): void;
export declare function N_0xbbe5b63effb08e68(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): any;
export declare function N_0xbd090f5b1db82189(p0: any, p1: any): void;
export declare function N_0xc43cd2668b204419(): any;
export declare function N_0xcc1baf72d571db8d(p0: any, p1: any, p2: any): any;
export declare function N_0xcc3edc5614b03f61(p0: any): void;
export declare function N_0xcc7fc854b956a128(): [string, string];
export declare function N_0xd2d74f89df844a50(p0: any): void;
export declare function N_0xd3f943b88f55376a(p0: any): void;
export declare function N_0xda4d8eb04e8e2928(p0: any): void;
export declare function N_0xdc057b86fc157031(): any;
export declare function N_0xdc416ca762bc4f43(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;
export declare function N_0xdd560abef5d3784c(p0: any, p1: any): void;
export declare function N_0xde2c3b74d2b3705c(p0: any, p1: any): void;
export declare function N_0xe704838f36f93b7b(p0: any): any;
export declare function N_0xe84aac1b22a73e99(p0: any, p1: any): void;
export declare function N_0xe97240065406cb80(p0: any, p1: any): void;
export declare function N_0xe98d55c5983f2509(p0: any): any;
export declare function N_0xeb946b9e579729ad(ped: number, p1: any): void;
export declare function N_0xef42f56f69877125(): void;
export declare function N_0xef50e344a8f93784(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0xf18af483df70bbde(p0: any): any;
export declare function N_0xf569e33fb72ed28e(): void;
export declare function N_0xf63fa29d4a9aca86(p0: any, p1: any): void;
export declare function N_0xf650dcf5d6f312c1(p0: any): void;
export declare function N_0xf81c53561d15f330(): any;
export declare function N_0xfc6ecb9170145ece(): void;
export declare function N_0xfd0759658268fd8e(p0: any): any;
export declare function N_0xfdf38e2b711bf78e(p0: any, p1: any): any;
export declare function N_0xff252e2bafb7330f(p0: any): void;
