// Named functions
export declare function ActivateDamageTrackerOnNetworkId(netID: number, toggle: boolean): void;
export declare function AnimSceneToNet(animScene: AnimScene): number;
export declare function CanRegisterMissionEntities(ped_amt: number, vehicle_amt: number, object_amt: number, pickup_amt: number): boolean;
export declare function CanRegisterMissionObjects(amount: number): boolean;
export declare function CanRegisterMissionPeds(amount: number): boolean;
export declare function CanRegisterMissionPickups(amount: number): boolean;
export declare function CanRegisterMissionVehicles(amount: number): boolean;
export declare function ClearLaunchParam(): string;
export declare function ClearLaunchParams(): void;
export declare function CloudDidRequestSucceed(id: number): boolean;
export declare function CloudHasRequestCompleted(id: number): boolean;
export declare function ConvertPosixTime(posixTime: number): any;
export declare function GetCloudTimeAsInt(): number;
export declare function GetLaunchParamExists(): [boolean, string];
export declare function GetLaunchParamString(): string;
export declare function GetLaunchParamValue(): [string, string];
export declare function GetMaxNumNetworkObjects(): number;
export declare function GetMaxNumNetworkPeds(): number;
export declare function GetMaxNumNetworkPickups(): number;
export declare function GetMaxNumNetworkVehicles(): number;
export declare function GetNetworkTime(): number;
export declare function GetNetworkTimeAccurate(): number;
export declare function GetNumCreatedMissionObjects(p0: boolean): number;
export declare function GetNumCreatedMissionPeds(p0: boolean): number;
export declare function GetNumCreatedMissionPickups(p0: boolean): number;
export declare function GetNumCreatedMissionVehicles(p0: boolean): number;
export declare function GetNumPeerNegotiationResponses(): number;
export declare function GetNumReservedMissionObjects(p0: boolean): number;
export declare function GetNumReservedMissionPeds(p0: boolean): number;
export declare function GetNumReservedMissionPickups(p0: boolean): number;
export declare function GetNumReservedMissionVehicles(p0: boolean): number;
export declare function GetSocialMatchmakingAllowed(): boolean;
export declare function GetStatusOfTextureDownload(p0: number): number;
export declare function GetTimeDifference(timeA: number, timeB: number): number;
export declare function GetTimeOffset(timeA: number, timeB: number): number;
export declare function GetUniqueIntForPlayer(player: number): number;
export declare function HasNetworkTimeStarted(): boolean;
export declare function IsDamageTrackerActiveOnNetworkId(netID: number): boolean;
export declare function IsEntityGhostedToLocalPlayer(entity: number): boolean;
export declare function IsNetworkIdOwnedByParticipant(netId: number): boolean;
export declare function IsObjectReassignmentInProgress(): boolean;
export declare function IsSphereVisibleToAnotherMachine(p0: any, p1: any, p2: any, p3: any, p4: any): boolean;
export declare function IsSphereVisibleToPlayer(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): boolean;
export declare function IsTimeLessThan(timeA: number, timeB: number): boolean;
export declare function IsTimeMoreThan(timeA: number, timeB: number): boolean;
export declare function KeepNetworkIdInFastInstance(netId: number, p1: boolean, p2: number): void;
export declare function LocalPlayerPedshotTextureDownloadRequest(p0: number, p1: number): number;
export declare function MugshotTextureDownloadRequest(p1: number, p3: boolean): [number, any, string];
export declare function NetToAnimScene(netId: number): AnimScene;
export declare function NetToEnt(netHandle: number): number;
export declare function NetToObj(netHandle: number): Record<string, any>;
export declare function NetToPed(netHandle: number): number;
export declare function NetToPropset(netId: number): PropSet;
export declare function NetToVeh(netHandle: number): number;
export declare function NetworkAcceptRsInvite(p0: any): any;
export declare function NetworkAccessTunableBool(tunableContext: string | number, tunableName: string | number): boolean;
export declare function NetworkAccessTunableInt(tunableContext: string | number, tunableName: string | number): [boolean, number];
export declare function NetworkActionPlatformInvite(): boolean;
export declare function NetworkActivityResetToIdle(): void;
export declare function NetworkActivitySetCurrent(p0: any): void;
export declare function NetworkAddFriend(): [boolean, any, string];
export declare function NetworkAlert(ctx: string | number, lh: string | number, ec: number, h: number): void;
export declare function NetworkAllowAllEntityFadingForInstances(toggle: boolean): void;
export declare function NetworkAllowEntityFadingForInstances(entity: number, toggle: boolean): void;
export declare function NetworkAllowSessionToMerge(toggle: boolean): any;
export declare function NetworkAllowSessionToSplit(toggle: boolean): void;
export declare function NetworkAreHandlesTheSame(): [boolean, any, any];
export declare function NetworkAreOnlineNotificationsShownInStoryMode(): boolean;
export declare function NetworkAutoSessionCanSplitSession(p0: any): boolean;
export declare function NetworkAutoSessionFinishInstance(): void;
export declare function NetworkAutoSessionIsObjectCreationPaused(): boolean;
export declare function NetworkAutoSessionSplitSession(p0: any, p1: any, p2: any, p3: any): any;
export declare function NetworkAwardHasReachedMaxclaim(p0: any): boolean;
export declare function NetworkCanAccessMultiplayer(): [boolean, number];
export declare function NetworkCanAddFriend(): [boolean, any];
export declare function NetworkCanRefreshFriendPage(): boolean;
export declare function NetworkCanSessionEnd(): boolean;
export declare function NetworkCanViewGamerUserContent(): [boolean, any];
export declare function NetworkCheckAccessAndAlertIfFail(): boolean;
export declare function NetworkCheckCommunicationPrivileges(p0: number): boolean;
export declare function NetworkCheckUserContentPrivileges(p0: number): boolean;
export declare function NetworkClearClockTimeOverride(): void;
export declare function NetworkClearFoundGamers(): void;
export declare function NetworkClearGetGamerStatus(): void;
export declare function NetworkClearPlatformInvite(): void;
export declare function NetworkClockTimeOverride(hour: number, minute: number, second: number, transitionTime: number, p4: boolean): void;
export declare function NetworkClockTimeOverride2(hour: number, minute: number, second: number, transitionTime: number, p4: boolean, clockwise: boolean): void;
export declare function NetworkConcealPlayer(player: number, toggle: boolean): void;
export declare function NetworkDebugRequestEntityPosition(): any;
export declare function NetworkDisableLeaveRemotePedBehind(toggle: boolean): void;
export declare function NetworkDisableProximityMigration(netID: number): void;
export declare function NetworkDisableRealtimeMultiplayer(): void;
export declare function NetworkDoesNetworkIdExist(netID: number): boolean;
export declare function NetworkDoesTunableExist(tunableContext: string | number, tunableName: string | number): boolean;
export declare function NetworkEndTutorialSession(): void;
export declare function NetworkGetAverageLatencyForPlayer(player: number): number;
export declare function NetworkGetAverageLatencyForPlayer2(player: number): number;
export declare function NetworkGetDestroyerOfEntity(p0: any, p1: any): [boolean, string | number];
export declare function NetworkGetDestroyerOfNetworkId(netId: number): [number, string | number];
export declare function NetworkGetDisplayNameFromHandle(displayName: string): [boolean, any];
export declare function NetworkGetDisplaynamesFromHandles(p0: any, p1: any, p2: any): number;
export declare function NetworkGetEntityFromNetworkId(netId: number): number;
export declare function NetworkGetEntityIsNetworked(entity: number): boolean;
export declare function NetworkGetEntityKillerOfPlayer(player: number): [number, string | number];
export declare function NetworkGetGamerSessionFromHandle(count: number): [boolean, any];
export declare function NetworkGetGamertagFromFriend(): [string, any];
export declare function NetworkGetGamertagFromHandle(): [string, any];
export declare function NetworkGetGlobalClock(): [boolean, number, number, number];
export declare function NetworkGetGlobalMultiplayerClock(): [number, number, number];
export declare function NetworkGetHostOfThisScript(): number;
export declare function NetworkGetHostOfThread(threadId: number): number;
export declare function NetworkGetLocalHandle(): any;
export declare function NetworkGetMaxNumParticipants(): number;
export declare function NetworkGetNetworkIdFromEntity(entity: number): number;
export declare function NetworkGetNetworkIdFromRope(ropeId: number): number;
export declare function NetworkGetNumConnectedPlayers(): number;
export declare function NetworkGetNumParticipants(): number;
export declare function NetworkGetNumScriptParticipants(p1: any, p2: any): [number, any];
export declare function NetworkGetNumUnackedForPlayer(player: number): number;
export declare function NetworkGetOldestResendCountForPlayer(player: number): number;
export declare function NetworkGetParticipantIndex(index: number): number;
export declare function NetworkGetPlatformInviteId(): number;
export declare function NetworkGetPlayerFastInstanceId(player: number): number;
export declare function NetworkGetPlayerFromGamerHandle(): [number, any];
export declare function NetworkGetPlayerIndex(player: number): number;
export declare function NetworkGetPlayerIndexFromPed(ped: number): number;
export declare function NetworkGetPlayerOwnerOfNetworkId(netId: number): number;
export declare function NetworkGetPromotionDlgSeenCount(): number;
export declare function NetworkGetRandomIntRanged(rangeStart: number, rangeEnd: number): number;
export declare function NetworkGetRank(): number;
export declare function NetworkGetRecentGamerNames(p0: any, p1: any, p2: any, p3: any): boolean;
export declare function NetworkGetRopeFromNetworkId(netId: number): number;
export declare function NetworkGetRosTitleName(): string;
export declare function NetworkGetScriptStatus(): number;
export declare function NetworkGetSessionHost(): number;
export declare function NetworkGetSizeOfHostBroadcastDataStorage(): [number, number];
export declare function NetworkGetSizeOfPlayerBroadcastDataStorage(): [number, number];
export declare function NetworkGetThisScriptIsNetworkScript(): boolean;
export declare function NetworkGetTimeoutTime(): number;
export declare function NetworkGetTotalNumFriends(): number;
export declare function NetworkGetTotalNumPlayers(): number;
export declare function NetworkGetUnreliableResendCountForPlayer(player: number): number;
export declare function NetworkGetXp(): number;
export declare function NetworkHandleFromFriend(friendIndex: number): any;
export declare function NetworkHandleFromPlayer(player: number): any;
export declare function NetworkHasControlOfAnimScene(animScene: AnimScene): boolean;
export declare function NetworkHasControlOfEntity(entity: number): boolean;
export declare function NetworkHasControlOfNetworkId(netId: number): boolean;
export declare function NetworkHasControlOfPickup(pickup: number): boolean;
export declare function NetworkHasControlOfPickupPlacement(p0: any): boolean;
export declare function NetworkHasEntityBeenRegisteredWithThisThread(entity: number): boolean;
export declare function NetworkHashFromPlayerHandle(player: number): string | number;
export declare function NetworkHasPendingInviteFailure(): boolean;
export declare function NetworkHasReceivedHostBroadcastData(): boolean;
export declare function NetworkHasRosPrivilege(index: number): boolean;
export declare function NetworkHasSocialClubAccount(): boolean;
export declare function NetworkHasValidRosCredentials(): boolean;
export declare function NetworkHaveOnlinePrivileges(): boolean;
export declare function NetworkHaveRosBannedPriv(): boolean;
export declare function NetworkIsAimCamActive(player: number): boolean;
export declare function NetworkIsClockTimeOverridden(): boolean;
export declare function NetworkIsCloudAvailable(): boolean;
export declare function NetworkIsConnectionEndpointRelayServer(player: number): boolean;
export declare function NetworkIsCustomUpsellEnabled(): boolean;
export declare function NetworkIsFeatureSupported(featureId: number): boolean;
export declare function NetworkIsFindingGamers(): boolean;
export declare function NetworkIsFriend(): [boolean, any];
export declare function NetworkIsGameInProgress(): boolean;
export declare function NetworkIsGamerInMySession(): [boolean, any];
export declare function NetworkIsHandleValid(): [boolean, any];
export declare function NetworkIsHost(): boolean;
export declare function NetworkIsHostOfThisScript(): boolean;
export declare function NetworkIsInMpCutscene(): boolean;
export declare function NetworkIsInPlatformParty(): boolean;
export declare function NetworkIsInPlatformPartyChat(): boolean;
export declare function NetworkIsInSession(): boolean;
export declare function NetworkIsInSessionLobby(): boolean;
export declare function NetworkIsInSpectatorMode(): boolean;
export declare function NetworkIsInTutorialSession(): boolean;
export declare function NetworkIsParticipantActive(p0: number): boolean;
export declare function NetworkIsPendingFriend(): [boolean, any];
export declare function NetworkIsPlatformInvitePending(): boolean;
export declare function NetworkIsPlayerActive(player: number): boolean;
export declare function NetworkIsPlayerAParticipant(player: number): boolean;
export declare function NetworkIsPlayerAParticipantOnScript(p0: number, p2: any): [boolean, any];
export declare function NetworkIsPlayerConcealed(player: number): boolean;
export declare function NetworkIsPlayerConnected(player: number): boolean;
export declare function NetworkIsPlayerEqualToIndex(player: number, index: number): boolean;
export declare function NetworkIsPlayerIndexValid(player: number): boolean;
export declare function NetworkIsPlayerInMpCutscene(player: number): boolean;
export declare function NetworkIsPlayerInSpectatorMode(player: number): boolean;
export declare function NetworkIsPromotionEnabled(): boolean;
export declare function NetworkIsResettingPopulation(): boolean;
export declare function NetworkIsScriptActive(p1: number, p2: boolean, p3: number): [boolean, string];
export declare function NetworkIsScriptActiveByHash(scriptHash: string | number, p1: number, p2: boolean, p3: number): boolean;
export declare function NetworkIsSessionActive(): boolean;
export declare function NetworkIsSessionStarted(): boolean;
export declare function NetworkIsSignedOnline(): boolean;
export declare function NetworkIsTunableCloudRequestPending(): boolean;
export declare function NetworkIsTutorialSessionChangePending(): boolean;
export declare function NetworkRegisterEntityAsNetworked(entity: number): void;
export declare function NetworkRegisterHostBroadcastVariables(p0: any, p1: any, p2: any): void;
export declare function NetworkRegisterPlayerBroadcastVariables(p0: any, p1: any, p2: any): void;
export declare function NetworkRemoveFriend(): [boolean, any];
export declare function NetworkRequestCloudTunables(): void;
export declare function NetworkRequestControlOfAnimScene(animScene: AnimScene): boolean;
export declare function NetworkRequestControlOfEntity(entity: number): boolean;
export declare function NetworkRequestControlOfNetworkId(netId: number): boolean;
export declare function NetworkRequestControlOfPickupPlacement(p0: any): boolean;
export declare function NetworkRequestJoin(p0: any): any;
export declare function NetworkRequestSessionSeamless(flags: number, seamlessType: number): [boolean, any];
export declare function NetworkResetPopulation(p0: boolean, p1: number): boolean;
export declare function NetworkResurrectLocalPlayer(x: number, y: number, z: number, heading: number, p4: number, p5: boolean, p6: any, p7: boolean): void;
export declare function NetworkResurrectLocalPlayer2(): any;
export declare function NetworkSeedRandomNumberGenerator(seed: number): void;
export declare function NetworkSessionAddSessionFlags(flags: number): boolean;
export declare function NetworkSessionGetSessionFlags(): number;
export declare function NetworkSessionGetSessionRequestResult(): [number, any];
export declare function NetworkSessionGetSessionType(): number;
export declare function NetworkSessionIsAnyRequestInProgress(): boolean;
export declare function NetworkSessionIsPrivate(): boolean;
export declare function NetworkSessionIsRequestInProgress(): [boolean, any];
export declare function NetworkSessionIsRequestInProgressByQueueGroup(queueGroup: number): boolean;
export declare function NetworkSessionIsRequestPendingTransition(): [boolean, any];
export declare function NetworkSessionIsSessionRequestIdValid(): [boolean, any];
export declare function NetworkSessionIsTransitioning(): boolean;
export declare function NetworkSessionLeaveSession(): boolean;
export declare function NetworkSessionLeftQueueOrRequestedSession(): [boolean, any];
export declare function NetworkSessionRemovePlayerFlags(flags: number): boolean;
export declare function NetworkSessionRemoveSessionFlags(flags: number): boolean;
export declare function NetworkSessionRequestSessionCompetitive(flags: number, matchType: number, p2: number, userHash: number): [boolean, any];
export declare function NetworkSessionRequestSessionOnCall(flags: number, category: number, userHash: number): [boolean, any, any];
export declare function NetworkSessionRequestSessionPrivate(flags: number, p1: number, userHash: number): [boolean, any];
export declare function NetworkSessionRequestSessionSeamless(flags: number, userHash: number, p2: number): [boolean, any];
export declare function NetworkSessionSetPlayerFlags(flags: number): boolean;
export declare function NetworkSessionTransitionToSession(): [boolean, any];
export declare function NetworkSetCompletedMpIntroFlowOnCurrentSlot(completed: boolean): boolean;
export declare function NetworkSetEntityInvisibleToNetwork(entity: number, toggle: boolean): void;
export declare function NetworkSetFriendlyFireOption(toggle: boolean): void;
export declare function NetworkSetInMpCutscene(p0: boolean, p1: boolean, p2: number, p3: boolean): void;
export declare function NetworkSetInSpectatorMode(toggle: boolean, playerPed: number): void;
export declare function NetworkSetInStaticSpectatorMode(toggle: boolean, x: number, y: number, z: number): void;
export declare function NetworkSetLocalPlayerInvincibleTime(time: number): void;
export declare function NetworkSetLocalPlayerPendingFastInstanceId(instanceId: number): void;
export declare function NetworkSetLocalPlayerSyncLookAt(toggle: boolean): void;
export declare function NetworkSetMissionFinished(): void;
export declare function NetworkSetMpMissionFlagOnCurrentSlot(enabled: boolean, flagIndex: number): boolean;
export declare function NetworkSetPlayerIsPassive(toggle: boolean): void;
export declare function NetworkSetRecentGamersEnabled(toggle: boolean): void;
export declare function NetworkSetRichPresence(p0: number, p2: number, p3: number): any;
export declare function NetworkSetScriptReadyForEvents(toggle: boolean): void;
export declare function NetworkSetThisScriptIsNetworkScript(lobbySize: number, p1: boolean, playerId: number): void;
export declare function NetworkSetVehicleWheelsDestructible(p0: any, p1: any): void;
export declare function NetworkShouldShowPromotionDlg(): boolean;
export declare function NetworkShowProfileUi(): any;
export declare function NetworkSpawnConfigSetFlags(flags: number): void;
export declare function NetworkSpawnConfigSetGroundToRootOffset(offset: number): void;
export declare function NetworkSpawnConfigSetTuningFloat(p0: string | number, p1: number): void;
export declare function NetworkStartSoloTutorialSession(): void;
export declare function NetworkStartUserContentPermissionsCheck(): [number, any];
export declare function NetworkTryAccessTunableBool(tunableContext: string | number, tunableName: string | number, defaultValue: boolean): boolean;
export declare function NetworkTryAccessTunableFloat(tunableContext: string | number, tunableName: string | number, defaultValue: number): number;
export declare function NetworkTryAccessTunableInt(tunableContext: string | number, tunableName: string | number, defaultValue: number): number;
export declare function ObjToNet(object: Record<string, any>): number;
export declare function ParticipantId(): number;
export declare function ParticipantIdToInt(): number;
export declare function PedToNet(ped: number): number;
export declare function PreventNetworkIdMigration(netId: number): void;
export declare function PropsetToNet(propSet: PropSet): number;
export declare function ReportPlayer(player: number, reportType: number): [string, string];
export declare function ReserveNetworkClientMissionObjects(amount: number): void;
export declare function ReserveNetworkClientMissionPeds(amount: number): void;
export declare function ReserveNetworkMissionObjects(amount: number): void;
export declare function ReserveNetworkMissionPeds(amount: number): void;
export declare function ReserveNetworkMissionPickups(amount: number): void;
export declare function ReserveNetworkMissionVehicles(amount: number): void;
export declare function SetEntityGhostedToLocalPlayer(entity: number, toggle: boolean): void;
export declare function SetEntityVisibleInCutscene(entity: number, p1: boolean, p2: boolean, p3: number): void;
export declare function SetLaunchParamString(): string;
export declare function SetLaunchParamValue(): [string, string];
export declare function SetLocalPlayerAsGhost(toggle: boolean): void;
export declare function SetLocalPlayerInvisibleLocally(p0: boolean): void;
export declare function SetLocalPlayerVisibleInCutscene(p0: any, p1: any, p2: any): void;
export declare function SetNetworkIdAlwaysExistsForPlayer(netId: number, player: number, toggle: boolean): void;
export declare function SetNetworkIdExistsOnAllMachines(netId: number, toggle: boolean): void;
export declare function SetNetworkIdVisibleInCutscene(p0: any, p1: any, p2: any, p3: any): void;
export declare function SetPlayerInvisibleLocally(player: number, toggle: boolean): void;
export declare function SetPlayerVisibleLocally(player: number, toggle: boolean): void;
export declare function SetSocialMatchmakingAllowed(toggle: boolean): void;
export declare function TextureDownloadGetName(p0: number): string;
export declare function TextureDownloadRelease(p0: number): void;
export declare function TextureDownloadRequest(p3: boolean): [number, number, string, string];
export declare function UgcClearQueryResults(p0: any): void;
export declare function UgcDidRequestSucceed(p0: any): boolean;
export declare function UgcGetCachedDescription(p0: number, length: number): string;
export declare function UgcHasPrivilege(): boolean;
export declare function UgcHasRequestFinished(p0: any): boolean;
export declare function UgcIsLanguageSupported(languageId: number): boolean;
export declare function UgcIsRequestPending(p0: any): boolean;
export declare function UgcQueryByContentId(latestVersion: boolean): [boolean, string, string];
export declare function UgcQueryGetContentHasPlayerRecord(p0: any, p1: any): boolean;
export declare function UgcQueryGetContentNum(p0: any): any;
export declare function UgcQueryWasForceCancelled(p0: any): boolean;
export declare function UgcRequestCachedDescription(p0: number): number;
export declare function UgcRequestContentDataFromParams(fileId: number, fileVersion: number, languageId: number): [number, string, string];
export declare function UgcSetQueryDataFromOffline(p0: boolean): void;
export declare function UgcTextureDownloadRequest(p1: any, p2: any, p3: any, p5: boolean): [number, any, any];
export declare function VehToNet(vehicle: number): number;
// Hash functions
export declare function N_0x02b3cdd652b3cdd6(): number;
export declare function N_0x02c4c6c2900d84df(p0: any, p1: any): void;
export declare function N_0x039ad6b57d5179ff(): number;
export declare function N_0x039b692b3318fab6(p0: boolean): number;
export declare function N_0x062842d61d0d53fd(): boolean;
export declare function N_0x0b6b4507ac5ea8b8(): any;
export declare function N_0x0bf90cbb6b72977b(): void;
export declare function N_0x0cc28c08613ba9e5(p0: any): void;
export declare function N_0x0d183d8490ee4366(p0: number, p1: number): void;
export declare function N_0x0e54d4da6018ff8e(): any;
export declare function N_0x0f44a5c78d114922(): [boolean, any];
export declare function N_0x104080ca9e519b00(p0: any, p1: any): any;
export declare function N_0x106cbdd5077dede1(p0: boolean): number;
export declare function N_0x11820d1ae80dea39(p0: any, p1: any): any;
export declare function N_0x12aeb56b489415c5(): any;
export declare function N_0x13f592fc3bf0ea84(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function N_0x1413b6bf27ab7a95(): any;
export declare function N_0x157d8f3de12b307f(p0: any, p1: any): void;
export declare function N_0x160f0ce6d76a39c9(): any;
export declare function N_0x162c23ca83ed0a62(p0: any): boolean;
export declare function N_0x16efb123c4451032(p0: any, p1: any): any;
export declare function N_0x18b94666cf610aeb(): any;
export declare function N_0x19447fcae97704dc(ctx: string | number, ec: number, ex: boolean, ro: boolean): void;
export declare function N_0x19b52c20b5c4757c(): void;
export declare function N_0x1e4e097d71d449fb(p0: boolean): number;
export declare function N_0x1f51f367b710a832(): any;
export declare function N_0x21a99a72b00d8002(p0: any, p1: any): any;
export declare function N_0x225640e09effdc3f(): any;
export declare function N_0x2302c0264ea58d31(): void;
export declare function N_0x232e1eb23cdb313c(): any;
export declare function N_0x236321f1178a5446(p0: any, p1: any, p2: any): any;
export declare function N_0x24cd8faea1368379(p0: any, p1: any, p2: any): any;
export declare function N_0x25189f9908e9cd65(): any;
export declare function N_0x267c78c60e806b9a(p0: any, p1: boolean): void;
export declare function N_0x2686bd9566b65eda(p0: any, p1: any, p2: any): void;
export declare function N_0x26a867c0b7a456d1(p0: any): any;
export declare function N_0x271f95e55c663b8b(p0: any, p1: any): any;
export declare function N_0x273e04a3a7ad1f2d(): any;
export declare function N_0x277865a734918ae6(): any;
export declare function N_0x27b1ae4d8c652f08(p0: any): any;
export declare function N_0x2a48d9567940598f(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0x2c4e98dda475364f(): string;
export declare function N_0x2cd41ac000e6f611(): void;
export declare function N_0x2d053ea815702dd1(p0: any, p1: any): any;
export declare function N_0x2d5dc831176d0114(p0: any): boolean;
export declare function N_0x3034c77c79a58880(p0: any): void;
export declare function N_0x316fd416c432c761(): boolean;
export declare function N_0x31dad2cd6d49546e(p0: any): any;
export declare function N_0x335af56613ca0f49(p0: number): void;
export declare function N_0x34bc1e79546ba543(p0: any): void;
export declare function N_0x350c23949e43686c(player: number): number;
export declare function N_0x356f9fb0698c1feb(p0: any, p1: any): any;
export declare function N_0x37a834aec6a4f74a(): any;
export declare function N_0x3aa0cdc63696166d(p0: any): any;
export declare function N_0x3cbd6565d9c3b133(p0: number, p1: number, p2: number): void;
export declare function N_0x3e4a16bc669e71b3(): any;
export declare function N_0x3e74a687a73979c6(p0: any): void;
export declare function N_0x3e8cce6769db5f34(p0: any): any;
export declare function N_0x3f0abae38a0515ad(p0: any, p1: any): void;
export declare function N_0x3f2ee18a3e294801(p0: any): any;
export declare function N_0x405ddefb1f531b18(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0x409fe0ca6a4d1d49(p0: any, p1: any, p2: any): any;
export declare function N_0x40fedb13870042f1(): void;
export declare function N_0x41452e8a3b9c0c4b(): any;
export declare function N_0x422f9d6d6c7bc290(p0: number): void;
export declare function N_0x43cf999205084b4b(): void;
export declare function N_0x442b4347b6ec36e8(entity: number, p1: number, p2: boolean): void;
export declare function N_0x4440fee3efe78f54(toggle: boolean): void;
export declare function N_0x44d59ec597bbf348(p0: any, p1: any): void;
export declare function N_0x4538ee7c321590bc(networkId: number): number;
export declare function N_0x455156f47dc6b78c(p0: any): void;
export declare function N_0x4664d213a0ccaf40(): any;
export declare function N_0x4835413ea6f9c9cd(p0: boolean): number;
export declare function N_0x49cf17a564918e8d(): void;
export declare function N_0x4dec5000f7b508f0(): [boolean, any, any];
export declare function N_0x5133cf81924f1129(): number;
export declare function N_0x51951de06c0d1c40(p0: any, p1: any): void;
export declare function N_0x51d99497abf3f451(p0: any): void;
export declare function N_0x564552c6af1eeab1(): void;
export declare function N_0x566ceb0542ef5ecf(p0: any, p1: any): any;
export declare function N_0x5759160ac17c13ce(p0: any, p1: any): void;
export declare function N_0x5a34cd9c3c5bec44(p0: any): boolean;
export declare function N_0x5a91bcef74944e93(p0: any, p1: any): void;
export declare function N_0x5ae17c6b0134b7f1(): any;
export declare function N_0x5b9c6ac118fd4774(): void;
export declare function N_0x5c497525f803486b(): void;
export declare function N_0x5cb8b0c846d0f30b(p0: any): void;
export declare function N_0x5cd3aad8ff9ed121(p0: any): void;
export declare function N_0x5d3c528b7a7df836(p0: any): void;
export declare function N_0x5e71e72a94985214(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function N_0x5ed39da62beb1330(p0: any): any;
export declare function N_0x5f0e99071582deca(p0: any, p1: any, p2: any): any;
export declare function N_0x5f328fc909f0e0ff(p0: number, p1: number, p2: number, p3: number): boolean;
export declare function N_0x603469298a4308af(p0: any): void;
export declare function N_0x61bfbaa795e712ad(): void;
export declare function N_0x638a3a81733086db(): any;
export declare function N_0x63e9dcbc8b0931ed(p0: any, p1: any, p2: any): any;
export declare function N_0x64a36ba85ce01a81(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0x65f040d91001ed4b(p0: any): void;
export declare function N_0x665161d250850a9f(p0: any): any;
export declare function N_0x67ccdf74c4df7169(): any;
export declare function N_0x68103e2247887242(): void;
export declare function N_0x691e4de5309eaefc(p0: any, p1: any): void;
export declare function N_0x6bff5f84102df80a(player: number): void;
export declare function N_0x6c27442a225a241a(p0: any): any;
export declare function N_0x6c7e04e9de451789(): void;
export declare function N_0x6cee2e30021daec6(): void;
export declare function N_0x6cf82a7f65a5ad5f(p0: any, p1: any): any;
export declare function N_0x6d206d383bb5f6b1(p0: any, p1: any): any;
export declare function N_0x6d87ba8ef15226cd(): any;
export declare function N_0x6fd992c4a1c1b986(): any;
export declare function N_0x704f92b3af20d857(p0: any): void;
export declare function N_0x71fa2d1880c48032(p0: any): void;
export declare function N_0x744bfbb0ca908161(p0: boolean): number;
export declare function N_0x74fb3e29e6d10fa9(): any;
export declare function N_0x75fc34a2ba345bd1(entity: number, player: number): [boolean, any];
export declare function N_0x765e60a1dcb8b1ce(): void;
export declare function N_0x7673c0d2c5cdac55(): void;
export declare function N_0x77b299e8799b1332(p0: any, p1: any, p2: any): any;
export declare function N_0x780a13f780a13f1b(p0: any): void;
export declare function N_0x7a17b7981560ffa5(p0: any): void;
export declare function N_0x7a8e8df782b47eb0(p0: any, p1: any, p2: any): any;
export declare function N_0x7b3ff2d193628126(p0: any): void;
export declare function N_0x7bca0a3972708436(p0: any, p1: any): any;
export declare function N_0x7e300b5b86ab1d1a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any): void;
export declare function N_0x814729078aed6d30(): void;
export declare function N_0x83fe8d7229593017(): void;
export declare function N_0x862c5040f4888741(p0: any, p1: any): any;
export declare function N_0x880a7202301e282b(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): any;
export declare function N_0x894b5ecab45d2342(p0: any, p1: any): void;
export declare function N_0x89d803cd48622150(p0: any): void;
export declare function N_0x89ec2fc89ecb1005(): any;
export declare function N_0x8c109958c9bb559d(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;
export declare function N_0x917ad74bdcf8b6e9(p0: boolean): number;
export declare function N_0x923346025512dfb7(p0: any): any;
export declare function N_0x950acd8f05b7b9df(p0: any): any;
export declare function N_0x97764e8ac6487a9a(p0: any, p1: any): any;
export declare function N_0x979765465a6f25fc(entity: number, p1: boolean): void;
export declare function N_0x97bce4c4b3191228(): void;
export declare function N_0x981146e5c9ce9250(p0: any): any;
export declare function N_0x982d7ad755b8f62c(p0: boolean): number;
export declare function N_0x98539fc453aea639(p0: any, p1: any): any;
export declare function N_0x9993f1e11944a3dd(p0: any, p1: any): any;
export declare function N_0x9b39b0555cc692b5(): void;
export declare function N_0x9e5a47744c0f0376(p0: number): boolean;
export declare function N_0x9ed3108d6847760a(p0: any, p1: any): void;
export declare function N_0xa021095c983f20d8(): any;
export declare function N_0xa21e3bad0a42d199(): any;
export declare function N_0xa2837a5e21fb5a58(p0: any): any;
export declare function N_0xa35e7bf20fa269e0(p0: any): void;
export declare function N_0xa3eec0a5aff3fc5b(p0: any): any;
export declare function N_0xa47d48d06aa5a188(): any;
export declare function N_0xa63e4f050f20021f(): void;
export declare function N_0xa6bf569956c60a60(p0: any, p1: any): any;
export declare function N_0xa6f1baabff6ad7b9(p0: any): void;
export declare function N_0xa7670f7991099680(p0: number): void;
export declare function N_0xa94ece191d90637a(): any;
export declare function N_0xa95470da137587f5(p0: any): void;
export declare function N_0xaaded99a6b268a27(): boolean;
export declare function N_0xacc44768af229042(): void;
export declare function N_0xadb56322eedfbdc9(p0: any, p1: any, p2: any): any;
export declare function N_0xaedf1bc1c133d6e3(): any;
export declare function N_0xafa14f98327791ce(): [boolean, any];
export declare function N_0xb131e686bd97b3f8(): void;
export declare function N_0xb389289f031f059a(): any;
export declare function N_0xb5c4b18b12a2af23(p0: any, p1: any): any;
export declare function N_0xb72999d3120599df(p0: any, p1: any, p2: any): any;
export declare function N_0xbaf7e2979442b29f(p0: boolean): number;
export declare function N_0xbb1ec8c2eef33baa(p0: any): void;
export declare function N_0xbb697756309d77ee(p0: any): any;
export declare function N_0xbc7d36946d19e60e(p0: any): void;
export declare function N_0xbdcc671b911040f9(p0: any): void;
export declare function N_0xbf8276e51761f9da(): any;
export declare function N_0xc028b3f52c707c49(p0: any): any;
export declare function N_0xc0cffda87c2c163d(p0: any, p1: any, p2: any): any;
export declare function N_0xc1968045eeb563b7(p0: number): void;
export declare function N_0xc1e1a3d5ed7617b8(p0: any, p1: any): void;
export declare function N_0xc8b6d18e22484643(): void;
export declare function N_0xc964fcd3d1720697(): any;
export declare function N_0xca58d4fd20d70f24(p0: any): any;
export declare function N_0xcaf4ca2f87779f8f(p0: any, p1: any): any;
export declare function N_0xcaf50048c8d0fba0(p0: any, p1: any): any;
export declare function N_0xcbac13f065c47596(): any;
export declare function N_0xcc4e72c339461ed1(): any;
export declare function N_0xcd53e6cbf609c012(p0: any): any;
export declare function N_0xcd954f330693f5f2(): any;
export declare function N_0xce5e79d9e303628e(): any;
export declare function N_0xcf23ab5bd47b384d(p0: any): void;
export declare function N_0xd041a32992a55f84(p0: any, p1: any): void;
export declare function N_0xd1ffb246f4e088ac(p0: any): any;
export declare function N_0xd39a72ae5ebd57e5(): void;
export declare function N_0xd3a3c8b9f3bdef81(): any;
export declare function N_0xd3b6ebc6c3d77d44(p0: number): void;
export declare function N_0xd4022c7286b0dfa2(p0: any, p1: any, p2: any): any;
export declare function N_0xd42c543f73233041(p0: any): void;
export declare function N_0xd637d327080cd86e(p0: any): void;
export declare function N_0xd66c9e72b3cc4982(p1: any): [number, any];
export declare function N_0xd785864798258032(): any;
export declare function N_0xd78a26024bb13e08(p0: any): void;
export declare function N_0xd7bad4062074b9c1(p0: any): any;
export declare function N_0xd7d0df27cb1765b5(p0: any): any;
export declare function N_0xda1bfed8582f61f0(): any;
export declare function N_0xdbc754cb6ccb9378(): any;
export declare function N_0xdc6ad5c046f33ab4(p0: any, p1: any): void;
export declare function N_0xdca4a74135e1dea5(p0: any): any;
export declare function N_0xdca6abdb9288fbe4(player: number, toggle: boolean): void;
export declare function N_0xdcc4b7f7112e8ab7(p0: any): any;
export declare function N_0xdd73c9838ce7181d(): any;
export declare function N_0xdd7806fd0543bc3d(): any;
export declare function N_0xddaeb478e58f8dea(p0: any, p1: any): any;
export declare function N_0xe0cb4ab15cb32710(p0: any, p1: any, p2: any): void;
export declare function N_0xe10f2d7715ababec(p0: any): any;
export declare function N_0xe258570e0c116a66(): boolean;
export declare function N_0xe2c3cec3c0903a00(p0: any): any;
export declare function N_0xe31a04513237dc89(): any;
export declare function N_0xe348d1404bd80146(p0: any): any;
export declare function N_0xe39600e50d608693(p0: any, p1: any): any;
export declare function N_0xe3ab5eefcb6671a2(p0: any): void;
export declare function N_0xe42d1042f09865fe(p0: any): any;
export declare function N_0xe47001b7cb8b98ae(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;
export declare function N_0xe525878a35b9eebd(p0: any, p1: any): any;
export declare function N_0xe5634491a58c2703(p0: any): void;
export declare function N_0xe59f4924bd3a718d(p0: any): any;
export declare function N_0xe5ff65cff5160752(): void;
export declare function N_0xe72e5c1289bd1f40(): [boolean, any];
export declare function N_0xe79ba3bc265895da(p0: any): any;
export declare function N_0xe8e633215471bb5d(p0: any): any;
export declare function N_0xe9b356c330c0a806(): any;
export declare function N_0xeb6027fd1b4600d5(p0: any, p1: any, p2: any): void;
export declare function N_0xebfa8d50addc54c4(p0: any): boolean;
export declare function N_0xec089f84a9c16c62(): any;
export declare function N_0xeeb7818b1d307212(p0: any): void;
export declare function N_0xf23a6d6c11d8ec15(p0: any): any;
export declare function N_0xf23d6475640d29eb(p0: any): any;
export declare function N_0xf260af6f43953316(p0: any): any;
export declare function N_0xf302ab9d978352ee(entity: number): number;
export declare function N_0xf342f6bd0a8287d5(p0: any): void;
export declare function N_0xf40ef49b3099e98e(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;
export declare function N_0xf8dc69dc1ad19072(p0: boolean): number;
export declare function N_0xf9b83b77929d8863(): any;
export declare function N_0xf9f0b3028431967b(p0: any, p1: any): any;
export declare function N_0xfb3205788f8afa3f(): number;
export declare function N_0xfb9eced5b68f3b78(p0: any): any;
export declare function N_0xfbc30b70b3cdb87e(): any;
export declare function N_0xfc6fcf4c03f1bbf6(): void;
export declare function N_0xfd1ac0b3858f224c(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0xfd4272a137703449(): void;
export declare function N_0xfd8112109a96877c(): void;
export declare function N_0xfe53b1f8d43f19bf(p0: any, p1: any): any;
export declare function N_0xff36f36b07e69059(p0: any): void;
