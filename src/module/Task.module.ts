// Named functions
export declare function AddCoverBlockingArea(playerX: number, playerY: number, playerZ: number, radiusX: number, radiusY: number, radiusZ: number, p6: boolean, p7: boolean, p8: boolean, p9: boolean): void;
export declare function AddCoverPoint(p0: number, p1: number, p2: number, p3: number, p4: any, p5: any, p6: any, p7: boolean): number;
export declare function AddPatrolRouteLink(p0: any, p1: any): void;
export declare function AddPatrolRouteNode(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
export declare function AssistedMovementIsRouteLoaded(): [boolean, const char];
export declare function AssistedMovementRemoveRoute(): const char;
export declare function AssistedMovementSetRouteProperties(props: number): const char;
export declare function ClearDrivebyTaskUnderneathDrivingTask(ped: number): void;
export declare function ClearPedSecondaryTask(ped: number): void;
export declare function ClearPedTasks(ped: number, p1: boolean, p2: boolean): void;
export declare function ClearPedTasksImmediately(ped: number, p1: boolean, p2: boolean): void;
export declare function ClearSequenceTask(): number;
export declare function ClosePatrolRoute(): void;
export declare function CloseSequenceTask(taskSequenceId: number): void;
export declare function CreatePatrolRoute(): void;
export declare function CreateScenarioPointHash(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): any;
export declare function CreateScenarioPointHashAttachedToEntity(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): any;
export declare function DeletePatrolRoute(): const char;
export declare function DeleteScenarioPoint(scenario: number): void;
export declare function DoesScenarioExistInArea(x: number, y: number, z: number, radius: number, p4: boolean, p5: any, p6: boolean): boolean;
export declare function DoesScenarioGroupExist(): [boolean, const char];
export declare function DoesScenarioGroupExistHash(scenarioGroup: string | number): boolean;
export declare function DoesScenarioOfTypeExistInAreaHash(x: number, y: number, z: number, typeHash: string | number, radius: number, p5: boolean): boolean;
export declare function DoesScenarioPointExist(scenario: number): boolean;
export declare function DoesScriptedCoverPointExistAtCoords(p0: any, p1: any, p2: any, p3: any): boolean;
export declare function FindScenarioOfTypeHash(xPos: number, yPos: number, zPos: number, scenarioType: string | number, distance: number, p5: any, p6: boolean): number;
export declare function ForceScenarioGroupPriority(p0: any, p1: any): void;
export declare function GetActiveVehicleMissionType(vehicle: number): number;
export declare function GetEntityScenarioPointIsAttachedTo(scenario: number): number;
export declare function GetIsCarriableEntity(entity: number): boolean;
export declare function GetIsPedAimingInTheAir(ped: number): boolean;
export declare function GetIsTaskActive(ped: number, taskIndex: number): boolean;
export declare function GetIsWaypointRecordingLoaded(): [boolean, const char];
export declare function GetItemInteractionFromPed(ped: number): string | number;
export declare function GetPedDesiredMoveBlendRatio(ped: number): number;
export declare function GetPedUsingScenarioPoint(scenario: number): number;
export declare function GetPedWaypointDistance(p0: any): number;
export declare function GetPedWaypointOverrideSpeed(p0: any): any;
export declare function GetPedWaypointProgress(ped: number): number;
export declare function GetRansackScenarioPointPedIsUsing(ped: number): any;
export declare function GetScenarioPointCoords(scenario: number, p1: boolean): [number, number, number];
export declare function GetScenarioPointEntity(scenarioPoint: number): [number, const char];
export declare function GetScenarioPointHeading(Scenario: number, p1: boolean): number;
export declare function GetScenarioPointPedIsUsing(ped: number, p1: boolean): number;
export declare function GetScenarioPointsInArea(posX: number, posY: number, posZ: number, radius: number, size: number): [number, any];
export declare function GetScenarioPointType(scenario: number): string | number;
export declare function GetScenarioPointTypePedIsUsing(ped: number): number;
export declare function GetScriptedCoverPointCoords(coverpoint: number): [number, number, number];
export declare function GetScriptTaskStatus(ped: number, taskHash: string | number, p2: boolean): number;
export declare function GetSequenceProgress(ped: number): number;
export declare function GetTaskMoveNetworkEvent(ped: number): [boolean, const char];
export declare function GetTaskMoveNetworkId(ped: number): string | number;
export declare function GetTaskMoveNetworkState(ped: number): const char;
export declare function GetVehicleWaypointPlaybackOverrideSpeed(p0: any): any;
export declare function GetVehicleWaypointProgress(vehicle: number): number;
export declare function GetVehicleWaypointTargetPoint(vehicle: number): number;
export declare function GetWaypointDistanceAlongRoute(p1: number): [number, const char];
export declare function IsDrivebyTaskUnderneathDrivingTask(ped: number): boolean;
export declare function IsEmoteTaskRunning(p0: any, p1: any): boolean;
export declare function IsMountedWeaponTaskUnderneathDrivingTask(ped: number): boolean;
export declare function IsMoveBlendRatioRunning(ped: number): boolean;
export declare function IsMoveBlendRatioSprinting(ped: number): boolean;
export declare function IsMoveBlendRatioStill(ped: number): boolean;
export declare function IsMoveBlendRatioWalking(ped: number): boolean;
export declare function IsPedActiveInScenario(p0: any, p1: any): boolean;
export declare function IsPedArrestingAnyPed(ped: number): boolean;
export declare function IsPedBeingArrested(ped: number): boolean;
export declare function IsPedCuffed(ped: number): boolean;
export declare function IsPedDuelling(ped: number): boolean;
export declare function IsPedExitingScenario(ped: number, p1: boolean): boolean;
export declare function IsPedGettingUp(ped: number): boolean;
export declare function IsPedInHitReact(ped: number): boolean;
export declare function IsPedInWrithe(ped: number): boolean;
export declare function IsPedRunning(ped: number): boolean;
export declare function IsPedRunningInspectionTask(ped: number): boolean;
export declare function IsPedRunningTaskItemInteraction(ped: number): boolean;
export declare function IsPedScenarioReactLooking(ped: number, p1: boolean): boolean;
export declare function IsPedSprinting(ped: number): boolean;
export declare function IsPedStill(ped: number): boolean;
export declare function IsPedWalking(ped: number): boolean;
export declare function IsScenarioGroupEnabled(): [boolean, const char];
export declare function IsScenarioGroupEnabledHash(scenarioGroup: string | number): boolean;
export declare function IsScenarioOccupied(p0: number, p1: number, p2: number, p3: number, p4: boolean): boolean;
export declare function IsScenarioPointActive(scenario: number): boolean;
export declare function IsScenarioPointFlagSet(scenario: number, flag: number): boolean;
export declare function IsScenarioTypeEnabled(): [boolean, const char];
export declare function IsTaskMoveNetworkActive(ped: number): boolean;
export declare function IsTaskMoveNetworkReadyForTransition(ped: number): boolean;
export declare function IsTeamCarriableEntity(p0: any, p1: any): boolean;
export declare function IsWaypointPlaybackGoingOnForPed(p0: any, p1: any): boolean;
export declare function IsWaypointPlaybackGoingOnForVehicle(p0: any, p1: any): boolean;
export declare function MakeObjectNotCarriable(object: Record<string, any>): void;
export declare function OpenPatrolRoute(): const char;
export declare function OpenSequenceTask(): number;
export declare function PedHasUseScenarioTask(ped: number): boolean;
export declare function PlayAnimOnRunningScenario(ped: number): [const char, const char];
export declare function PlayEntityScriptedAnim(entity: number): any;
export declare function RemoveAllCoverBlockingAreas(): void;
export declare function RemoveCoverPoint(coverpoint: number): void;
export declare function RemoveWaypointRecording(): const char;
export declare function RequestTaskMoveNetworkStateTransition(ped: number): const char;
export declare function RequestWaypointRecording(): const char;
export declare function ResetScenarioGroupsEnabled(): void;
export declare function ResetScenarioTypesEnabled(): void;
export declare function SetAnimFilter(p0: any, p1: any, p2: any, p3: any): void;
export declare function SetAnimRate(p0: any, p1: number, p2: any, p3: boolean): void;
export declare function SetDrivebyTaskTarget(shootingPed: number, targetPed: number, targetVehicle: number, x: number, y: number, z: number): void;
export declare function SetDriveTaskCruiseSpeed(driver: number, cruiseSpeed: number): void;
export declare function SetDriveTaskMaxCruiseSpeed(ped: number, maxCruiseSpeed: number): void;
export declare function SetEnableSpeedRestrainForWaypointRecordingLeader(p0: any, p1: any): void;
export declare function SetEnhancedBreakFree(ped: number, p1: boolean): [boolean, const char];
export declare function SetHighFallTask(ped: number, p1: any, p2: any, p3: any): void;
export declare function SetPedDesiredMoveBlendRatio(ped: number, p1: number): void;
export declare function SetPedPathAvoidFire(ped: number, avoidFire: boolean): void;
export declare function SetPedPathCanDropFromHeight(ped: number, toggle: boolean): void;
export declare function SetPedPathCanUseClimbovers(ped: number, toggle: boolean): void;
export declare function SetPedPathCanUseLadders(ped: number, toggle: boolean): void;
export declare function SetPedPathClimbCostModifier(ped: number, modifier: number): void;
export declare function SetPedPathDeepSnowCostModifier(ped: number, modifier: number): void;
export declare function SetPedPathFoliageCostModifier(ped: number, modifier: number): void;
export declare function SetPedPathMayEnterDeepWater(ped: number, mayEnterDeepWater: boolean): void;
export declare function SetPedPathMayEnterWater(ped: number, mayEnterWater: boolean): void;
export declare function SetPedPathPreferToAvoidWater(ped: number, avoidWater: boolean, p2: number): void;
export declare function SetPedWaypointRouteOffset(p0: any, p1: any, p2: any, p3: any): any;
export declare function SetScenarioGroupEnabled(toggle: boolean): const char;
export declare function SetScenarioGroupEnabledHash(scenarioGroup: string | number, toggle: boolean): void;
export declare function SetScenarioPointActive(scenario: number, active: boolean): void;
export declare function SetScenarioPointCoords(scenario: number, xPos: number, yPos: number, zPos: number, p4: boolean): void;
export declare function SetScenarioPointFlag(scenario: number, flag: number, value: boolean): void;
export declare function SetScenarioPointHeading(scenario: number, heading: number, p2: boolean): void;
export declare function SetScenarioTypeEnabled(toggle: boolean): const char;
export declare function SetScenarioTypeEnabledHash(scenarioType: string | number, toggle: boolean): void;
export declare function SetSequenceToRepeat(taskSequenceId: number, repeat: boolean): void;
export declare function SetTaskMoveNetworkSignalBool(ped: number, value: boolean): const char;
export declare function SetTaskMoveNetworkSignalFloat(ped: number, value: number): const char;
export declare function SetTaskMoveNetworkSignalVector(ped: number, x: number, y: number, z: number): const char;
export declare function SetTeamCarriableEntity(p0: any, p1: any, p2: any): void;
export declare function SetUpSpeedRestrainInformationForPlayerFollower(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function StopAnimPlayback(ped: number, p1: number, p2: boolean): void;
export declare function StopAnimTask(ped: number, p3: number): [const char, const char];
export declare function TaskAchieveHeading(ped: number, heading: number, timeout: number): void;
export declare function TaskAimAtCoord(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskAimAtEntity(ped: number, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskAimGunAtCoord(ped: number, x: number, y: number, z: number, time: number, p5: boolean, p6: boolean): void;
export declare function TaskAimGunAtEntity(ped: number, targetEntity: number, duration: number, p3: boolean, p4: number): void;
export declare function TaskAmbientAnimalHunt(ped: number, p1: any, p2: any): void;
export declare function TaskAmbientAnimalStalk(ped: number, p1: any, p2: any): void;
export declare function TaskAnimalAlerted(ped: number, p1: any, p2: any): void;
export declare function TaskAnimalBleedOut(ped: number, killer: number, p2: boolean, weaponHash: string | number, p4: number, p5: number): void;
export declare function TaskAnimalFlee(ped: number, p1: any, p2: any): void;
export declare function TaskAnimalInteraction(ped: number, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskAnimalUnalerted(ped: number, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskAnimalWrithe(ped: number, p1: any, p2: any): void;
export declare function TaskArrestPed(ped: number, target: number): void;
export declare function TaskBark(ped: number, p1: any, p2: any): void;
export declare function TaskBoardVehicle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskBoardVehicle2(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskBoatMission(pedDriver: number, boat: number, p2: any, p3: any, x: number, y: number, z: number, p7: any, maxSpeed: number, drivingStyle: number, p10: number, p11: any): void;
export declare function TaskBreakVehicleDoorLock(ped: number, vehicle: number): void;
export declare function TaskCarriable(entity: number, carryConfig: string | number, carrier: number, carriableSlot: number, flags: number): void;
export declare function TaskClearDefensiveArea(ped: number): void;
export declare function TaskClearLookAt(ped: number): void;
export declare function TaskClimb(ped: number, unused: boolean): void;
export declare function TaskClimb2(ped: number, p1: any): void;
export declare function TaskClimbLadder(ped: number, p1: any, p2: any, p3: any): void;
export declare function TaskCombatAnimalChargePed(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskCombatAnimalWarn(ped: number, p1: any, p2: any): void;
export declare function TaskCombatHatedTargets(ped: number, radius: number): void;
export declare function TaskCombatHatedTargetsAroundPed(ped: number, radius: number, flags: number, p3: any): void;
export declare function TaskCombatHatedTargetsAroundPedTimed(ped: number, radius: number, p2: number, p3: any): void;
export declare function TaskCombatHatedTargetsInArea(ped: number, x: number, y: number, z: number, radius: number, flags: number, p6: any): void;
export declare function TaskCombatHatedTargetsNoLosTest(ped: number, radius: number): void;
export declare function TaskCombatPed(ped: number, targetPed: number, p2: number, p3: number): void;
export declare function TaskCombatPed3(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskCombatPedTimed(ped: number, targetPed: number, p2: number, p3: any): void;
export declare function TaskCompanionAmbient(ped: number, p1: any): void;
export declare function TaskConfront(ped: number, targetPed: number, p2: number): boolean;
export declare function TaskCower(ped: number, duration: number, ped2: number): const char;
export declare function TaskCutFreeHogtiedTargetPed(ped: number, targetPed: number): void;
export declare function TaskCutFreeHogtiedTargetPed2(ped: number, targetPed: number, p2: number): void;
export declare function TaskDisembarkNearestTrainCarriage(p0: any, p1: any, p2: any): void;
export declare function TaskDisembarkVehicle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskDismountAnimal(rider: number, taskFlag: number, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskDriveBy(driverPed: number, targetPed: number, targetVehicle: number, targetX: number, targetY: number, targetZ: number, distanceToShoot: number, pedAccuracy: number, p8: boolean, firingPattern: string | number): void;
export declare function TaskDuck(ped: number, p1: number): void;
export declare function TaskDuel(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any): void;
export declare function TaskDumpCarriableFromParent(ped: number, ped2: number, entity: number): void;
export declare function TaskEat(ped: number, p1: any, p2: any): void;
export declare function TaskEnterAnimScene(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskEnterVehicle(ped: number, vehicle: number, timeout: number, seat: number, speed: number, flag: number, p6: any): void;
export declare function TaskEvasiveAnim(ped: number, p1: any, p2: any): void;
export declare function TaskEveryoneLeaveVehicle(vehicle: number, p1: boolean): void;
export declare function TaskEveryoneLeaveVehicleInOrder(vehicle: number, p1: boolean): void;
export declare function TaskExtendRoute(x: number, y: number, z: number): void;
export declare function TaskFleeCoord(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskFleeCoordVia(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any): void;
export declare function TaskFleeFromCoord(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any): void;
export declare function TaskFleeFromPed(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
export declare function TaskFleePed(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskFleePedVia(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
export declare function TaskFlushRoute(): void;
export declare function TaskFlyAway(ped: number, p1: any): void;
export declare function TaskFlyingCircle(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskFlyToCoord(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskFollowAndConverseWithPed(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any): void;
export declare function TaskFollowEntityAlongWaypointRecordingAtOffset(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskFollowEntityWhileAimingAtEntity(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskFollowNavMeshToCoord(ped: number, x: number, y: number, z: number, speedMultiplier: number, timeout: number, stoppingRange: number, flags: number, unk: number): void;
export declare function TaskFollowNavMeshToCoordAdvanced(ped: number, x: number, y: number, z: number, speedMultiplier: number, timeout: number, stoppingRange: number, flags: number, p8: number, p9: number, p10: number, entity: number, unk: number): void;
export declare function TaskFollowPavementToCoord(ped: number): any;
export declare function TaskFollowPointRoute(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskFollowToOffsetOfCoord(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any): void;
export declare function TaskFollowToOffsetOfEntity(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any): void;
export declare function TaskFollowWaypointRecording(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskFollowWaypointRecordingAdvanced(ped: number, p1: any): void;
export declare function TaskFollowWaypointRecordingAtOffset(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskForceMotionState(ped: number, motionStateHash: string | number, p2: boolean): void;
export declare function TaskGoStraightToCoord(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskGoStraightToCoordRelativeToEntity(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskGoToCoordAndAimAtHatedEntitiesNearCoord(ped: number, goToLocationX: number, goToLocationY: number, goToLocationZ: number, focusLocationX: number, focusLocationY: number, focusLocationZ: number, speed: number, shootAtEnemies: boolean, distanceToStopAt: number, noRoadsDistance: number, unkTrue: boolean, unkFlag: number, aimingFlag: number, firingPattern: string | number): void;
export declare function TaskGoToCoordAndAimAtHatedEntitiesNearCoordUsingCombatStyle(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any): void;
export declare function TaskGoToCoordAnyMeans(ped: number, x: number, y: number, z: number, speed: number, p5: any, p6: boolean, walkingStyle: number, p8: number): void;
export declare function TaskGoToCoordAnyMeansExtraParams(ped: number, x: number, y: number, z: number, speed: number, p5: any, p6: boolean, walkingStyle: number, p8: number, p9: any, p10: any, p11: any, p12: any): void;
export declare function TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any): void;
export declare function TaskGoToCoordWhileAimingAtCoord(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any, p15: any): void;
export declare function TaskGoToCoordWhileAimingAtCoordUsingCombatStyle(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any, p15: any): void;
export declare function TaskGoToCoordWhileAimingAtEntity(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any): void;
export declare function TaskGoToCoordWhileAimingAtEntityUsingCombatStyle(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any): void;
export declare function TaskGoToEntity(ped: number, target: number, duration: number, distance: number, speed: number, p5: number, p6: number): void;
export declare function TaskGotoEntityAiming(ped: number, target: number, distanceToStopAt: number, StartAimingDist: number): void;
export declare function TaskGotoEntityOffset(ped: number, entity: number, p2: any, x: number, y: number, z: number, duration: number): void;
export declare function TaskGotoEntityOffsetXy(ped: number, entity: number, duration: number, p3: number, p4: number, p5: number, p6: number, p7: boolean): void;
export declare function TaskGotoEntityOffsetXyAiming(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskGotoEntityOffsetXyz(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskGotoEntityOffsetXyzAiming(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
export declare function TaskGoToEntityWhileAimingAtEntity(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any): void;
export declare function TaskGoToEntityWhileAimingAtEntityUsingCombatStyle(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any): void;
export declare function TaskGoToWhistle(ped: number, p1: any, p2: any): void;
export declare function TaskGrapple(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): boolean;
export declare function TaskGuard(ped: number, p1: any, p2: any): void;
export declare function TaskGuardAssignedDefensiveArea(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: any): void;
export declare function TaskGuardAssignedDefensiveArea2(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskGuardCurrentPosition(ped: number, p1: number, p2: number, p3: boolean): void;
export declare function TaskHandsUp(ped: number, duration: number, facingPed: number, p3: number, p4: boolean): void;
export declare function TaskHitchAnimal(ped: number, p1: any, p2: any): void;
export declare function TaskHogtieable(ped: number): void;
export declare function TaskHogtieTargetPed(ped: number, targetPed: number): void;
export declare function TaskHorseAction(ped: number, p1: any, p2: any, p3: any): void;
export declare function TaskIntimidated(p0: any, p1: any, p2: any, p3: any, p4: any): boolean;
export declare function TaskIntimidated2(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): boolean;
export declare function TaskInvestigate(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskItemInteraction(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskItemInteraction2(ped: number, propNameGxt: string | number, prop: Record<string, any>, propId: string | number, itemInteractionState: string | number, p5: number, p6: any, p7: number): void;
export declare function TaskItemInteraction3(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskJump(ped: number, unused: boolean): void;
export declare function TaskJump2(ped: number, x: number, y: number, z: number, entity: number): void;
export declare function TaskKnockedOut(ped: number, p1: number, permanently: boolean): void;
export declare function TaskKnockedOutAndHogtied(ped: number, p1: number, p2: number): void;
export declare function TaskLassoPed(ped: number, targetPed: number): void;
export declare function TaskLeadAndConverse(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskLeadHorse(ped: number, horse: number): void;
export declare function TaskLeaveAnyVehicle(ped: number, p1: number, p2: number): void;
export declare function TaskLeaveVehicle(ped: number, vehicle: number, flags: number, unkPed: number): void;
export declare function TaskLookAtCoord(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskLookAtEntity(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskLootEntity(ped: number, entity: number): void;
export declare function TaskLootNearestEntity(ped: number, x: number, y: number, z: number, p4: number, p5: number): void;
export declare function TaskMelee(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): boolean;
export declare function TaskMountAnimal(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskMoveBeInFormation(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskMoveInTraffic(ped: number, p1: any, p2: any, p3: any): void;
export declare function TaskMoveInTraffic4(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskMoveInTrafficAwayFromEntity(ped: number, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskMoveInTrafficToDestination(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskMoveNetworkAdvancedByNameWithInitParams(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any): void;
export declare function TaskMoveNetworkAdvancedByNameWithInitParamsAttached(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any, p15: any, p16: any, p17: any): void;
export declare function TaskMoveNetworkByName(ped: number, multiplier: number, p3: boolean, flags: number): [const char, const char];
export declare function TaskMoveNetworkByNameWithInitParams(ped: number, p3: number, p4: boolean, flags: number): [const char, any, const char];
export declare function TaskPatrol(ped: number, p2: any, p3: boolean, p4: boolean): const char;
export declare function TaskPatrol2(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskPause(ped: number, ms: number): void;
export declare function TaskPedSlideToCoord(ped: number, x: number, y: number, z: number, heading: number, p5: number): void;
export declare function TaskPerformSequence(ped: number, taskSequenceId: number): void;
export declare function TaskPerformSequence2(p0: any, p1: any, p2: any, p3: any): void;
export declare function TaskPerformSequenceFromProgress(ped: number, p1: any, p2: any, p3: any): void;
export declare function TaskPersistentCharacter(ped: number): void;
export declare function TaskPickupCarriableEntity(ped: number, entity: number): void;
export declare function TaskPickUpWeapon(ped: number, p1: any): void;
export declare function TaskPlaceCarriedEntityAtCoord(ped: number, entity: number, x: number, y: number, z: number, p5: number, flags: number): void;
export declare function TaskPlaceCarriedEntityOnMount(ped: number, entity: number, mount: number, p3: number): void;
export declare function TaskPlantBomb(ped: number, x: number, y: number, z: number, heading: number): void;
export declare function TaskPlayAnim(ped: number, speed: number, speedMultiplier: number, duration: number, flags: number, playbackRate: number, p8: boolean, p9: any, p10: boolean, p12: boolean): [const char, const char, const char];
export declare function TaskPlayAnimAdvanced(ped: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, speed: number, speedMultiplier: number, duration: number, flags: number, p13: number, p14: number, p15: number, p16: number): [const char, const char];
export declare function TaskPlayEmote(ped: number, category: number, p2: number, emoteType: string | number, p4: boolean, p5: boolean, p6: boolean, p7: boolean, p8: boolean): void;
export declare function TaskPlayEmoteWithHash(ped: number, category: number, p2: number, emoteType: string | number, p4: boolean, p5: boolean, p6: boolean, p7: boolean, p8: boolean): void;
export declare function TaskPlayUpperAnimFacingEntity(ped: number, entity: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: boolean, p10: boolean, p11: number, p13: number, p14: number): [const char, const char, const char];
export declare function TaskPolice(ped: number, p1: boolean): boolean;
export declare function TaskPutPedDirectlyIntoCover(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any): void;
export declare function TaskPutPedDirectlyIntoGrapple(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskPutPedDirectlyIntoMelee(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskReact(ped: number, reactingTo: number, reactionType: number, p3: number, p4: number, unkFlag: number, p6: any, p7: any, p8: any): void;
export declare function TaskReloadWeapon(ped: number, unused: boolean): void;
export declare function TaskReviveTarget(ped: number, p1: any, p2: any): void;
export declare function TaskRideTrain(ped: number, train: number, scenarioPoint: number, scenarioHash: string | number): void;
export declare function TaskRobPed(ped: number, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskScriptedAnimation(ped: number): any;
export declare function TaskSeekClearLosToEntity(ped: number, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskSeekCoverFromPed(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function TaskSeekCoverFromPos(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskSeekCoverToCoords(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any): void;
export declare function TaskSeekCoverToCoverPoint(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskSetBlockingOfNonTemporaryEvents(ped: number, toggle: boolean): void;
export declare function TaskSetCrouchMovement(ped: number, p1: boolean, p2: any, p3: boolean): void;
export declare function TaskSetSphereDefensiveArea(ped: number, p1: number, p2: number, p3: number, p4: number): void;
export declare function TaskSetStealthMovement(ped: number, p1: boolean, p2: any, p3: boolean): void;
export declare function TaskShockingEventReact(ped: number, p1: any, p2: any): void;
export declare function TaskShootAtCoord(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskShootAtEntity(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskShootWithWeapon(ped: number): any;
export declare function TaskShuffleToNextVehicleSeat(ped: number, p1: any): void;
export declare function TaskSmartFleeCoord(ped: number, x: number, y: number, z: number, distance: number, time: number, p6: boolean, p7: boolean): void;
export declare function TaskSmartFleePed(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskStandGuard(ped: number, x: number, y: number, z: number, heading: number): const char;
export declare function TaskStandStill(ped: number, time: number): void;
export declare function TaskStartScenarioAtPosition(ped: number, scenarioHash: string | number, x: number, y: number, z: number, heading: number, duration: number, sittingScenario: boolean, teleport: boolean, p10: number, p11: boolean): const char;
export declare function TaskStartScenarioInPlace2(ped: number, p1: any, p3: number, p4: boolean, p5: number, p6: boolean): const char;
export declare function TaskStartScenarioInPlaceHash(ped: number, scenarioHash: string | number, p2: number, p3: boolean, p4: any, p5: number, p6: boolean): void;
export declare function TaskStayInCover(ped: number): void;
export declare function TaskStopLeadingHorse(p0: any): void;
export declare function TaskSwapFishingBait(ped: number, p1: any, p2: any): void;
export declare function TaskSwapWeapon(ped: number, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskThrowProjectile(ped: number, p1: any, p2: any, p3: any): void;
export declare function TaskThrowProjectile2(p0: any, p1: any, p2: any, p3: any): void;
export declare function TaskTurnPedToFaceCoord(ped: number, x: number, y: number, z: number, duration: number): void;
export declare function TaskTurnPedToFaceEntity(ped: number, targetEntity: number, duration: number, p3: number, p4: number, p5: number): void;
export declare function TaskTurnToFaceClosestPed(ped: number, p1: number, p2: number, p3: number): void;
export declare function TaskUseNearestScenarioChainToCoord(ped: number, x: number, y: number, z: number, distance: number, p5: boolean, p6: boolean, p7: boolean, p8: boolean): void;
export declare function TaskUseNearestScenarioChainToCoordWarp(ped: number, x: number, y: number, z: number, distance: number, p5: boolean, p6: boolean, p7: boolean, p8: boolean): void;
export declare function TaskUseNearestScenarioToCoord(ped: number, x: number, y: number, z: number, distance: number, duration: number, p6: boolean, p7: boolean, p8: boolean, p9: boolean): void;
export declare function TaskUseNearestScenarioToCoordWarp(ped: number, x: number, y: number, z: number, distance: number, duration: number, p6: boolean, p7: boolean, p8: boolean, p9: boolean): void;
export declare function TaskUseNearestTrainScenarioToCoordWarp(ped: number, x: number, y: number, z: number, distance: number): void;
export declare function TaskUseRandomScenarioInGroup(ped: number, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskUseScenarioPoint(ped: number, p1: any, p3: number, p4: boolean, p5: boolean, p6: string | number, p7: boolean, p8: number, p9: boolean): const char;
export declare function TaskUseScenarioPoint2(ped: number, ped2: number, p2: any, p4: number, p5: string | number, p6: number, p7: boolean): const char;
export declare function TaskVehicleAimAtCoord(ped: number, x: number, y: number, z: number): void;
export declare function TaskVehicleAimAtPed(ped: number, target: number): void;
export declare function TaskVehicleDriveToCoord(ped: number, vehicle: number, x: number, y: number, z: number, speed: number, p6: any, vehicleModel: string | number, drivingMode: number, stopRange: number, p10: number): void;
export declare function TaskVehicleDriveToCoord2(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskVehicleDriveToDestination(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any): void;
export declare function TaskVehicleDriveToDestination2(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function TaskVehicleDriveToPoint(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskVehicleDriveToPoint2(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function TaskVehicleDriveWander(ped: number, vehicle: number, speed: number, drivingStyle: number): void;
export declare function TaskVehicleEscort(ped: number, vehicle: number, targetVehicle: number, mode: number, speed: number, drivingStyle: number, minDistance: number, p7: number, noRoadsDistance: number): void;
export declare function TaskVehicleFollowWaypointRecording(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any): void;
export declare function TaskVehicleFollowWaypointRecording2(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
export declare function TaskVehicleGotoNavmesh(ped: number, vehicle: number, x: number, y: number, z: number, speed: number, behaviorFlag: number, stoppingRange: number): void;
export declare function TaskVehicleMission(driver: number, vehicle: number, vehicleTarget: number, missionType: number, p4: number, p5: any, p6: number, p7: number, DriveAgainstTraffic: boolean): void;
export declare function TaskVehicleMissionPedTarget(ped: number, vehicle: number, pedTarget: number, mode: number, maxSpeed: number, drivingStyle: number, minDistance: number, p7: number, DriveAgainstTraffic: boolean): void;
export declare function TaskVehicleShootAtCoord(ped: number, x: number, y: number, z: number, p4: number): void;
export declare function TaskVehicleShootAtPed(ped: number, target: number, p2: number): void;
export declare function TaskVehicleTempAction(driver: number, vehicle: number, action: number, time: number): void;
export declare function TaskWalkAway(ped: number, p1: any): void;
export declare function TaskWanderAndConverseWithPed(ped: number, p1: any, p2: any, p3: any): void;
export declare function TaskWanderInArea(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
export declare function TaskWanderInVolume(ped: number, p1: any, p2: any, p3: any, p4: any): void;
export declare function TaskWanderStandard(ped: number, p1: number, p2: number): void;
export declare function TaskWanderSwim(ped: number, p1: any): void;
export declare function TaskWarpPedIntoVehicle(ped: number, vehicle: number, seat: number): void;
export declare function TaskWeapon(ped: number): void;
export declare function TaskWhistleAnim(ped: number, p1: any, p2: any): void;
export declare function UncuffPed(ped: number): void;
export declare function UnhogtiePed(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function UpdateTaskHandsUpDuration(ped: number, duration: number): void;
export declare function UseWaypointRecordingAsAssistedMovementRoute(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function VehicleWaypointPlaybackGetIsPaused(p0: any): any;
export declare function VehicleWaypointPlaybackOverrideSpeed(vehicle: number, speed: number): void;
export declare function VehicleWaypointPlaybackPause(vehicle: number): void;
export declare function VehicleWaypointPlaybackResume(vehicle: number): void;
export declare function VehicleWaypointPlaybackUseDefaultSpeed(vehicle: number): void;
export declare function WaypointPlaybackGetIsAiming(p0: any): any;
export declare function WaypointPlaybackGetIsPaused(p0: any): boolean;
export declare function WaypointPlaybackGetIsShooting(p0: any): any;
export declare function WaypointPlaybackOverrideSpeed(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function WaypointPlaybackPause(p0: any, p1: any, p2: any, p3: any): void;
export declare function WaypointPlaybackResume(p0: any, p1: boolean, p2: any, p3: any): void;
export declare function WaypointPlaybackStartAimingAtCoord(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function WaypointPlaybackStartAimingAtEntity(p0: any, p1: any, p2: any, p3: any): void;
export declare function WaypointPlaybackStartAimingAtPed(p0: any, p1: any, p2: any, p3: any): void;
export declare function WaypointPlaybackStartShootingAtCoord(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function WaypointPlaybackStartShootingAtEntity(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function WaypointPlaybackStartShootingAtPed(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function WaypointPlaybackStopAimingOrShooting(p0: any): void;
export declare function WaypointPlaybackUseDefaultSpeed(p0: any): void;
export declare function WaypointRecordingGetClosestWaypoint(x: number, y: number, z: number): [boolean, const char, number];
export declare function WaypointRecordingGetCoord(point: number): [boolean, const char, [number, number, number]];
export declare function WaypointRecordingGetNumPoints(): [boolean, const char, number];
export declare function WaypointRecordingGetSpeedAtPoint(point: number): [number, const char];
// Hash functions
export declare function N_0x0000a8acdc2e1b6a(p0: any, p1: any): void;
export declare function N_0x00ffe0f85253c572(p0: any): any;
export declare function N_0x013a7ba5015c1372(p0: any, p1: any): void;
export declare function N_0x01af8a3729231a43(p0: any): any;
export declare function N_0x02ebbb3989b7e695(p0: any): any;
export declare function N_0x0365000d8bf86531(p0: any): any;
export declare function N_0x03d741cb4052e26c(p0: any): any;
export declare function N_0x05a0100ea714db68(p0: any, p1: any): any;
export declare function N_0x06ecf3925bc2abae(p0: any, p1: any): void;
export declare function N_0x098036cab8373d36(p0: any): void;
export declare function N_0x098caa6dbe7d8d82(p0: any, p1: any): void;
export declare function N_0x099d4a855d53b03b(p0: any, p1: any, p2: any): void;
export declare function N_0x0a98a362c5a19a43(p0: any): any;
export declare function N_0x0d322aef8878b8fe(p0: any, p1: any): void;
export declare function N_0x0e184495b27bb57d(): void;
export declare function N_0x0f4f6c4ce471259d(p0: any, p1: any): void;
export declare function N_0x0fe797dd9f70dfa6(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0x10adfdf07b7dffba(p0: any, p1: any, p2: any): any;
export declare function N_0x10c44f633e2d6d9e(p0: any): void;
export declare function N_0x11c7ce1ae38911b5(p0: any): any;
export declare function N_0x11cd066f54da0133(p0: any): any;
export declare function N_0x12990818c1d35886(p0: any, p1: any, p2: any): void;
export declare function N_0x141bc64c8d7c5529(vehicle: number): void;
export declare function N_0x152664aa3188b193(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;
export declare function N_0x1632eb9386cdbe64(p0: any, p1: any): void;
export declare function N_0x188f8071f244b9b8(p0: any, p1: any): void;
export declare function N_0x1948bbe561a2375a(p0: any): any;
export declare function N_0x19bc99c678fba139(p0: any, p1: any, p2: any): void;
export declare function N_0x1a52076d26e09004(p0: any, p1: any): void;
export declare function N_0x1a7d63cb1b0bb223(p0: any): void;
export declare function N_0x1ac5a8ab50cfaa33(p0: any): any;
export declare function N_0x1d125814ebc517eb(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0x1ecf56c040fd839c(p0: any, p1: any): void;
export declare function N_0x1f298c7bd30d1240(p0: any): void;
export declare function N_0x1f7a9a9c38c13a56(p0: any): any;
export declare function N_0x2064b33f6e6b92d4(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0x216343750545a486(p0: any, p1: any, p2: any): void;
export declare function N_0x22cd2c33ed4467a1(p0: any): any;
export declare function N_0x22cdbf317c40a122(p0: any): void;
export declare function N_0x23767d80c7eed7c6(p0: any, p1: any): void;
export declare function N_0x2416ec2f31f75266(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function N_0x244430c13ba5258e(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0x28ef780bdea8a639(p0: any, p1: any): void;
export declare function N_0x2948235db2058e99(p0: any, p1: any): void;
export declare function N_0x2a10538d0a005e81(p0: any, p1: any): void;
export declare function N_0x2b8af29a78024bd3(p0: any): void;
export declare function N_0x2c497bdef897c6df(p0: any): any;
export declare function N_0x2d19bc4df626cbe7(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0x2d657b10f211c572(p0: any, p1: any): any;
export declare function N_0x2e1d6d87346bb7d2(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0x2e20878fd208a68e(p0: any, p1: any): void;
export declare function N_0x2eb977293923c723(p0: any, p1: any): void;
export declare function N_0x30146c25686b7836(p0: any, p1: any): any;
export declare function N_0x30b391915538ebe2(p0: any): void;
export declare function N_0x31bb338f64d5c861(p0: any, p1: any): void;
export declare function N_0x34c0010188d7c54a(p0: any, p1: any): void;
export declare function N_0x351f74ed6177ebe7(): any;
export declare function N_0x358a1a751b335a11(p0: any): void;
export declare function N_0x36d188aecb26094b(p0: any): void;
export declare function N_0x370f57c47f68ebca(p0: any): any;
export declare function N_0x3923ec958249657d(p0: any, p1: any, p2: any): void;
export declare function N_0x3acc128510142b9d(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0x3bbeecc5b8f35318(p0: any, p1: any): void;
export declare function N_0x3f8387db1b9f31b7(p0: any, p1: any): any;
export declare function N_0x3feb770d8ed9047a(p0: any): any;
export declare function N_0x3ffcd7bba074cc80(ped: number, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function N_0x41323f4e0c4ae94b(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function N_0x4161648394262fdf(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0x41d1331afad5a091(p0: any, p1: any, p2: any): void;
export declare function N_0x42cfd8fd8cc8dc69(p0: any, p1: any): void;
export declare function N_0x450080ddedb91258(p0: any, p1: any): void;
export declare function N_0x4687e69d258bbe41(p0: any): any;
export declare function N_0x4a7d73989f52eb37(p0: any, p1: any): void;
export declare function N_0x4ba972d0e5ad8122(p0: any, p1: any): void;
export declare function N_0x4e806a395d43a458(p0: any): void;
export declare function N_0x4eccc2815ca79ae2(p0: any): any;
export declare function N_0x4f57397388e1dff8(): void;
export declare function N_0x508f5053e3f6f0c4(p0: any, p1: any, p2: any, p3: any, p4: any): any;
export declare function N_0x50aa09a0da64e73c(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function N_0x517d01bf27b682d1(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function N_0x5217b7b6db78e1f3(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function N_0x541e5b41dca45828(p0: any, p1: any, p2: any): void;
export declare function N_0x55cd5fddd4335c1e(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function N_0x5758b1ee0c3fd4ac(p0: any, p1: any): void;
export declare function N_0x583ae9af9cee0958(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0x5952dfa38fa529fe(): any;
export declare function N_0x59872ea4cbd11c56(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): any;
export declare function N_0x59ae5ca4ffb4e378(p0: any, p1: any): any;
export declare function N_0x59aea4dc640814b9(p0: any, p1: any): void;
export declare function N_0x5a40040bb5ae3ea2(p0: any): void;
export declare function N_0x5b4bbe80ad5972dc(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): any;
export declare function N_0x5b68d0007d9c92eb(p0: any, p1: any): void;
export declare function N_0x5c885e0978b6ad60(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0x5d9b0baaf04cf65b(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0x5e5d96be25e9df68(p0: any): any;
export declare function N_0x5ea655f01d93667a(p0: any): any;
export declare function N_0x615dc4a82e90bb48(p0: any, p1: any, p2: any): void;
export declare function N_0x640a602946a8c972(p0: any): any;
export declare function N_0x643fd1556f621772(p0: any, p1: any, p2: any): any;
export declare function N_0x651f0530083c0e5a(p0: any, p1: any): void;
export declare function N_0x65d281985f2bdfc2(p0: any, p1: any): void;
export declare function N_0x6718f40313a2b5a6(p0: any): any;
export declare function N_0x673a8779d229ba5a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function N_0x678d3226cf70b9c8(p0: any, p1: any): any;
export declare function N_0x6a1af481407bf6e9(p0: any): void;
export declare function N_0x6afd84aeaa3ea538(p0: any): any;
export declare function N_0x6afda2264925bd11(p0: any): void;
export declare function N_0x6ba606ab3a83bc4d(p0: any): any;
export declare function N_0x6c269f673c47031e(p0: any): any;
export declare function N_0x6c50b9dccca70023(p0: any): any;
export declare function N_0x6dac799857ef3f11(p0: any, p1: any): any;
export declare function N_0x6ef4e31b4d5d2da0(p0: any, p1: any): any;
export declare function N_0x70f7a1eab1ae3aa8(p0: any, p1: any): void;
export declare function N_0x722d6a49200174fe(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function N_0x73f0d0327bfa0812(p0: any): any;
export declare function N_0x748d5e0d2a1a4c61(p0: any, p1: any, p2: any): void;
export declare function N_0x74f0209674864cbd(): any;
export declare function N_0x756c7b4c43df0422(p0: any): any;
export declare function N_0x764db5a48390fbad(p0: any, p1: any): void;
export declare function N_0x76610d12a838ebde(p0: any): any;
export declare function N_0x78b4567e18b54480(p0: any): void;
export declare function N_0x78d8c1d4eb80c588(p0: any): any;
export declare function N_0x79197f7d2bb5e73a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;
export declare function N_0x7981037a96e7d174(ped: number): void;
export declare function N_0x7c015d8bcec72cf4(p0: any, p1: any): void;
export declare function N_0x7cb99fadde73cd1b(p0: any): any;
export declare function N_0x7fb78b2199c10e92(p0: any): void;
export declare function N_0x801bd27403f3cba0(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0x804425c4bbd00883(p0: any): any;
export declare function N_0x816a3acd265e2297(p0: any, p1: any): void;
export declare function N_0x827a58ced9d4d5b4(p0: any, p1: any): void;
export declare function N_0x82ed59f095056550(p0: any, p1: any): void;
export declare function N_0x8360c47380b6f351(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0x844ceee428ea35b0(p0: any, p1: any): any;
export declare function N_0x849791ebbdba0362(p0: any): any;
export declare function N_0x865732725536ee39(p0: any): [number, number, number];
export declare function N_0x8798cf6815b8fe0f(p0: any, p1: any): void;
export declare function N_0x885d19ac2b6fbff4(p0: any, p1: any): void;
export declare function N_0x88fd60d846d9cd63(p0: any): void;
export declare function N_0x8b1fdf63c3193eda(p0: any, p1: any): void;
export declare function N_0x8bb283a7888ad1ad(p0: any, p1: any, p2: any): void;
export declare function N_0x8e1dde26d270cc5e(p0: any, p1: any): void;
export declare function N_0x8f8c84363810691a(p0: any, p1: any): void;
export declare function N_0x9050df2c53801208(p0: any, p1: any): void;
export declare function N_0x90703a8f75ee4abd(p0: any, p1: any): any;
export declare function N_0x908bb14bce85c80e(p0: any): any;
export declare function N_0x91cb5e431f579ba1(p0: any): [number, number, number];
export declare function N_0x920684be432875b1(p0: any): any;
export declare function N_0x9420fb11b8d77948(p0: any): any;
export declare function N_0x954451ea2d2120fb(p0: any, p1: any): void;
export declare function N_0x9585ff23c4b8ede0(p0: any, p1: any): void;
export declare function N_0x9667cce29bfa0780(p0: any): void;
export declare function N_0x96c6ed22fb742c3e(p0: any, p1: any): any;
export declare function N_0x974da3408dec4e79(p0: any): any;
export declare function N_0x9addbb9242179d56(p0: any, p1: any): void;
export declare function N_0x9b0c7fa063e67629(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0x9b6a58fdb0024f12(p0: any, p1: any): void;
export declare function N_0x9c8f42a5d1859dc1(p0: any): void;
export declare function N_0x9ebd34958ab6f824(p0: any): void;
export declare function N_0x9ff5f9b24e870748(p0: any): any;
export declare function N_0xa052608a12559bbb(p0: any, p1: any): void;
export declare function N_0xa21aa2f0c2180125(p0: any, p1: any): void;
export declare function N_0xa263adbbc8056214(p0: any, p1: any): void;
export declare function N_0xa42dc7919159cccf(p0: any): void;
export declare function N_0xa6a76d666a281f2d(p0: any, p1: any): void;
export declare function N_0xa710dc5d25f8b942(p0: any, p1: any): any;
export declare function N_0xa7479fb665361edb(p0: any, p1: any): void;
export declare function N_0xa9e7672f8c6c6f74(p0: any): any;
export declare function N_0xaa0af6025160243a(p0: any, p1: any): void;
export declare function N_0xab591ae6b48b913e(p0: any, p1: any): void;
export declare function N_0xac5045ab7f1a34fd(p0: any): any;
export declare function N_0xadc45010bc17af0e(p0: any, p1: any): void;
export declare function N_0xaf2ef28ce3084505(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0xb219612b5568e9ec(p0: any): any;
export declare function N_0xb2d15d3551fe4fae(p0: any): void;
export declare function N_0xb2f47a1afdfcc595(p0: any, p1: any): void;
export declare function N_0xb35370d5353995cb(p0: any, p1: any, p2: any): void;
export declare function N_0xb520dbda7fcf573f(p0: any): any;
export declare function N_0xb79817db31ff72b9(p0: any, p1: any): void;
export declare function N_0xb8e213d02f37947d(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
export declare function N_0xb8e3486d107f4194(p0: any, p1: any): void;
export declare function N_0xb8f52a3f84a7cc59(p0: any): any;
export declare function N_0xbaab791aa72c2821(p0: any, p1: any): void;
export declare function N_0xbc3f847ae2c3dc65(p0: any, p1: any): void;
export declare function N_0xbc864a70ad55e0c1(p0: any, p1: any): any;
export declare function N_0xbd1c3c0f271c39d3(p0: any, p1: any): void;
export declare function N_0xbd70108d01875299(p0: any): any;
export declare function N_0xbdfeeb7600bcd938(p0: any): void;
export declare function N_0xbedbe39b5fd98fd6(p0: any): any;
export declare function N_0xbeefbb608d2aa68a(p0: any): void;
export declare function N_0xc47d9080a9a8856a(p0: any, p1: any): void;
export declare function N_0xc6170856e54557b2(p0: any, p1: any, p2: any): void;
export declare function N_0xce4e669400e5f8aa(p0: any, p1: any, p2: any, p3: any): void;
export declare function N_0xce71c2f9baa3f975(p0: any, p1: any): void;
export declare function N_0xd0abc4ea3b5e21a0(p0: any, p1: any): any;
export declare function N_0xd508fa229f1c4900(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;
export declare function N_0xd999e379265a4501(p0: any, p1: any, p2: any): void;
export declare function N_0xde0c8b145ea466ff(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
export declare function N_0xdf56a2b50c04dea4(p0: any, p1: any): any;
export declare function N_0xdf8a5855b9f9a97b(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any, p14: any, p15: any, p16: any, p17: any): void;
export declare function N_0xdf94844d474f31e5(p0: any): void;
export declare function N_0xe01c8dc8edd28d31(p0: any, p1: any): void;
export declare function N_0xe01f55b2896f6b37(p0: any, p1: any): void;
export declare function N_0xe05a5d39be6e93af(p0: any): void;
export declare function N_0xe116f6f2da2d777e(p0: any): [number, number, number];
export declare function N_0xe1c105e6bba48270(): any;
export declare function N_0xe2cf104add49d4bf(p0: any): void;
export declare function N_0xe47dd64b9f02677d(p0: any): any;
export declare function N_0xe55478c5edf70ac2(p0: any): any;
export declare function N_0xe5831aa1e2fd147c(p0: any): void;
export declare function N_0xe62754d09354f6cf(p0: any): any;
export declare function N_0xe69fda40aac3efc0(p0: any, p1: any): void;
export declare function N_0xe6a151364c600b24(p0: any): any;
export declare function N_0xe7bbc4e56b989449(p0: any, p1: any, p2: any): any;
export declare function N_0xe7fa07624574b79a(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
export declare function N_0xe8f1a5b4ced3725a(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function N_0xe9225354fb7437a7(p0: any, p1: any): void;
export declare function N_0xe9a6400d1a0e7a55(p0: any): any;
export declare function N_0xea31f199a73801d3(p0: any): any;
export declare function N_0xeaf87da2be78a15b(p0: any, p1: any): void;
export declare function N_0xeb2ed1dc3aec0654(p0: any, p1: any, p2: any, p3: any, p4: any): void;
export declare function N_0xeb67d4e056c85a81(p0: any): any;
export declare function N_0xeba2081e0a5f4d17(p0: any): void;
export declare function N_0xec516fe805d2cb2d(p0: any): void;
export declare function N_0xed1f514af4732258(p0: any): any;
export declare function N_0xeed08a3a98b847e2(p0: any, p1: any, p2: any): void;
export declare function N_0xefc4303ddc6e60d3(p0: any): any;
export declare function N_0xefd875c2791ebefd(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0xf3735acd11acd500(p0: any, p1: any): any;
export declare function N_0xf3735acd11acd501(p0: any, p1: any): any;
export declare function N_0xf40a109b4b79a848(p0: any, p1: any, p2: any): void;
export declare function N_0xf718931a82eeb898(): void;
export declare function N_0xf948f4356f010f11(p0: any, p1: any, p2: any): void;
export declare function N_0xf97f462779b31786(p0: any): any;
export declare function N_0xfa30e2254461adeb(p0: any, p1: any): void;
export declare function N_0xfc7f71cf49f70b6b(p0: any): void;
export declare function N_0xfdecca06e8b81346(p0: any): any;
export declare function N_0xfe5d28b9b7837cc1(p0: any, p1: any, p2: any, p3: any): any;
export declare function N_0xff745b0346e19e2c(p0: any): void;
export declare function N_0xff8afca532b500d4(p0: any, p1: any): void;
export declare function N_0xffb520a3e16f7b7b(p0: any, p1: any): void;
